{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js\";\nimport React from \"react\"; // Importing the React library\n\nimport Chart from \"chart.js/auto\"; // Importing the Chart.js library\n\nimport { Pie } from \"react-chartjs-2\"; // Importing the Line component from the react-chartjs-2 library\n\n// Setting up the labels for the x-axis of the chart\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchCallForGraphs = () => {\n  fetch(\"http://localhost:8080/JobVista/Graphs\", {\n    method: 'GET',\n    headers: {\n      'Content-type': 'Application/JSON'\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return response.json();\n  }).then(result => {\n    console.log(\"Fetched data:\", result);\n    console.log(\"Departments:\", result.message);\n    setDepartmentJson(result.message.departments);\n  }).catch(error => {\n    console.error('Error fetching data:', error);\n  });\n};\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"];\n\n// Setting up the data for the chart, including the labels and datasets\nconst data = {\n  labels: labels,\n  datasets: [{\n    label: \"My First dataset\",\n    // Setting up the label for the dataset\n    backgroundColor: \"rgb(255, 99, 132)\",\n    // Setting up the background color for the dataset\n    borderColor: \"rgb(255, 240, 132)\",\n    // Setting up the border color for the dataset\n    data: [0, 10, 5, 2, 20, 30, 45] // Setting up the data for the dataset\n  }]\n};\n\n// Defining the LineChart component\nconst LineChart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pie, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \" // Rendering the Line component from the react-chartjs-2 library with the data passed as props\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = LineChart;\nexport default LineChart; // Exporting the LineChart component as the default export of the module\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Chart","Pie","jsxDEV","_jsxDEV","fetchCallForGraphs","fetch","method","headers","then","response","ok","Error","status","json","result","console","log","message","setDepartmentJson","departments","catch","error","labels","data","datasets","label","backgroundColor","borderColor","LineChart","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["import React from \"react\"; // Importing the React library\n\nimport Chart from \"chart.js/auto\"; // Importing the Chart.js library\n\nimport { Pie } from \"react-chartjs-2\"; // Importing the Line component from the react-chartjs-2 library\n\n// Setting up the labels for the x-axis of the chart\n\nconst fetchCallForGraphs = () => {\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(result => {\n        console.log(\"Fetched data:\", result);\n        console.log(\"Departments:\", result.message);\n        setDepartmentJson(result.message.departments);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }\n\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"];\n\n// Setting up the data for the chart, including the labels and datasets\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: \"My First dataset\", // Setting up the label for the dataset\n      backgroundColor: \"rgb(255, 99, 132)\", // Setting up the background color for the dataset\n      borderColor: \"rgb(255, 240, 132)\", // Setting up the border color for the dataset\n      data: [0, 10, 5, 2, 20, 30, 45], // Setting up the data for the dataset\n    },\n  ],\n};\n\n// Defining the LineChart component\nconst LineChart = () => {\n  return (\n    <div>\n      <Pie data={data} /> // Rendering the Line component from the react-chartjs-2 library with the data passed as props\n    </div>\n  );\n};\n\nexport default LineChart; // Exporting the LineChart component as the default export of the module\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,OAAOC,KAAK,MAAM,eAAe,CAAC,CAAC;;AAEnC,SAASC,GAAG,QAAQ,iBAAiB,CAAC,CAAC;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC7BC,KAAK,CAAC,uCAAuC,EAAE;IAC7CC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;IAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;IAC3D;IACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDL,IAAI,CAACM,MAAM,IAAI;IACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAAC;IACpCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,MAAM,CAACG,OAAO,CAAC;IAC3CC,iBAAiB,CAACJ,MAAM,CAACG,OAAO,CAACE,WAAW,CAAC;EAC/C,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C,CAAC,CAAC;AACN,CAAC;AAEH,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC;;AAEvE;AACA,MAAMC,IAAI,GAAG;EACXD,MAAM,EAAEA,MAAM;EACdE,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,kBAAkB;IAAE;IAC3BC,eAAe,EAAE,mBAAmB;IAAE;IACtCC,WAAW,EAAE,oBAAoB;IAAE;IACnCJ,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAE;EACnC,CAAC;AAEL,CAAC;;AAED;AACA,MAAMK,SAAS,GAAGA,CAAA,KAAM;EACtB,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA,CAACF,GAAG;MAACsB,IAAI,EAAEA;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,mGACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAACC,EAAA,GANIN,SAAS;AAQf,eAAeA,SAAS,CAAC,CAAC;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}