{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from \"chart.js/auto\";\nimport { Bar } from 'react-chartjs-2';\nimport Style from '../BarChart/Bar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst domain = localStorage.getItem(\"domain\");\nconst HorizontalChart = () => {\n  _s();\n  const [label, setLabel] = useState([]);\n  const [datavalue, setdatavalue] = useState([]);\n  const fetchData = () => {\n    fetch(`http://${domain}/JobVista/Graphs`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'Application/JSON'\n      },\n      body: JSON.stringify({\n        'userDetails': JSON.parse(localStorage.getItem('userDetails'))\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      const selectedApplicantsGraphInDepartments = result.selectedApplicantsGraphInDepartments;\n      if (Object.keys(selectedApplicantsGraphInDepartments).length > 0) {\n        const entries = Object.entries(selectedApplicantsGraphInDepartments);\n        if (entries.length === 1) {\n          setLabel(entries.map(([key, _]) => key));\n          setdatavalue(entries.map(([_, value]) => value));\n          console.log(label, \" Appli lable\");\n          console.log(datavalue, \" Appli value\");\n        } else {\n          const mergedEntry = entries.reduce((acc, [key, value]) => ({\n            ...acc,\n            [key]: value\n          }), {});\n          if (Object.keys(mergedEntry).length !== label.length) {\n            setLabel(Object.keys(mergedEntry));\n            setdatavalue(Object.values(mergedEntry));\n          }\n        }\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: Style.chartId,\n    className: Style.line,\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: label,\n        datasets: [{\n          label: \"\",\n          data: datavalue,\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        indexAxis: 'y'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(HorizontalChart, \"IVnKMsILtEoPOWeGItkL5i9n6N0=\");\n_c = HorizontalChart;\nexport default HorizontalChart;\nvar _c;\n$RefreshReg$(_c, \"HorizontalChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","Bar","Style","jsxDEV","_jsxDEV","domain","localStorage","getItem","HorizontalChart","_s","label","setLabel","datavalue","setdatavalue","fetchData","fetch","method","headers","body","JSON","stringify","parse","then","response","ok","Error","status","json","result","selectedApplicantsGraphInDepartments","Object","keys","length","entries","map","key","_","value","console","log","mergedEntry","reduce","acc","values","catch","error","id","chartId","className","line","children","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","indexAxis","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/BarChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Chart from \"chart.js/auto\";\nimport { Bar } from 'react-chartjs-2';\nimport Style from '../BarChart/Bar.module.css';\n\nconst domain = localStorage.getItem(\"domain\");\nconst HorizontalChart = () => {\n    const [label, setLabel] = useState([]);\n    const [datavalue, setdatavalue] = useState([]);\n  \n    const fetchData = () => {\n        fetch(`http://${domain}/JobVista/Graphs`, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'Application/JSON'\n            },\n            body: JSON.stringify({ 'userDetails': JSON.parse(localStorage.getItem('userDetails')) })\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(result => {\n                const selectedApplicantsGraphInDepartments = result.selectedApplicantsGraphInDepartments;\n                if ((Object.keys(selectedApplicantsGraphInDepartments)).length > 0) {\n                    \n                    const entries = Object.entries(selectedApplicantsGraphInDepartments);\n                    if (entries.length === 1) {\n                        setLabel(entries.map(([key, _]) => key));\n                        setdatavalue(entries.map(([_, value]) => value));\n                        console.log(label, \" Appli lable\");\n                        console.log(datavalue, \" Appli value\");\n\n                    } else {\n                        const mergedEntry = entries.reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n                        if (Object.keys(mergedEntry).length !== label.length) {\n                            setLabel(Object.keys(mergedEntry));\n                            setdatavalue(Object.values(mergedEntry));\n                        }\n                    }\n\n                    \n                }\n\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n            });\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n\n    return (\n        <div id={Style.chartId} className={Style.line} >\n            <Bar data={{\n                    labels: label,\n                    datasets: [{\n                        label: \"\",\n                        data: datavalue,\n                        backgroundColor: [\n                            \"rgba(255, 99, 132, 0.2)\",\n                            \"rgba(54, 162, 235, 0.2)\",\n                            \"rgba(255, 206, 86, 0.2)\",\n                            \"rgba(75, 192, 192, 0.2)\",\n                            \"rgba(153, 102, 255, 0.2)\",\n                            \"rgba(255, 159, 64, 0.2)\"\n                        ],\n                        borderColor: [\n                            \"rgba(255, 99, 132, 1)\",\n                            \"rgba(54, 162, 235, 1)\",\n                            \"rgba(255, 206, 86, 1)\",\n                            \"rgba(75, 192, 192, 1)\",\n                            \"rgba(153, 102, 255, 1)\",\n                            \"rgba(255, 159, 64, 1)\"\n                        ],\n                        borderWidth: 1\n                    }]\n                }}\n                options={{\n                    indexAxis: 'y'\n                }}\n/>\n        </div>\n    );\n};\n\nexport default HorizontalChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}