{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Pie } from \"react-chartjs-2\";\n\n// Setting up the data for the chart, including the labels and datasets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: label,\n  datasets: [{\n    label: \"My First dataset\",\n    // Setting up the label for the dataset\n    backgroundColor: \"rgb(255, 99, 132)\",\n    // Setting up the background color for the dataset\n    borderColor: \"rgb(255, 240, 132)\",\n    // Setting up the border color for the dataset\n    data: [0, 10, 5, 2, 20, 30, 45] // Setting up the data for the dataset\n  }]\n};\nconst LineChart = () => {\n  _s();\n  const [label, setLabel] = useState(null);\n  const fetchCallForGraphs = () => {\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      console.log(\"Fetched data:\", result);\n      setLabel(result);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChart, \"Ppo0LF+kHPlv1SP52BlgX7bgG28=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","Chart","Pie","jsxDEV","_jsxDEV","data","labels","label","datasets","backgroundColor","borderColor","LineChart","_s","setLabel","fetchCallForGraphs","fetch","method","headers","then","response","ok","Error","status","json","result","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["import React, { useState } from \"react\"; \nimport Chart from \"chart.js/auto\"; \nimport { Pie } from \"react-chartjs-2\"; \n\n\n\n\n\n\n\n// Setting up the data for the chart, including the labels and datasets\nconst data = {\n  labels: label,\n  datasets: [\n    {\n      label: \"My First dataset\", // Setting up the label for the dataset\n      backgroundColor: \"rgb(255, 99, 132)\", // Setting up the background color for the dataset\n      borderColor: \"rgb(255, 240, 132)\", // Setting up the border color for the dataset\n      data: [0, 10, 5, 2, 20, 30, 45], // Setting up the data for the dataset\n    },\n  ],\n};\n\n\nconst LineChart = () => {\n    const [label , setLabel] = useState(null);\n\nconst fetchCallForGraphs = () => {\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(result => {\n        console.log(\"Fetched data:\", result);\n        setLabel(result);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }\n  return (\n    <div>\n      <Pie data={data} /> \n    </div>\n  );\n};\n\nexport default LineChart; \n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,GAAG,QAAQ,iBAAiB;;AAQrC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAG;EACXC,MAAM,EAAEC,KAAK;EACbC,QAAQ,EAAE,CACR;IACED,KAAK,EAAE,kBAAkB;IAAE;IAC3BE,eAAe,EAAE,mBAAmB;IAAE;IACtCC,WAAW,EAAE,oBAAoB;IAAE;IACnCL,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAE;EACnC,CAAC;AAEL,CAAC;AAGD,MAAMM,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACL,KAAK,EAAGM,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE7C,MAAMc,kBAAkB,GAAGA,CAAA,KAAM;IAC7BC,KAAK,CAAC,uCAAuC,EAAE;MAC7CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;MAC3D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAACM,MAAM,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAAC;MACpCX,QAAQ,CAACW,MAAM,CAAC;IAClB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EACD,oBACExB,OAAA;IAAAyB,QAAA,eACEzB,OAAA,CAACF,GAAG;MAACG,IAAI,EAAEA;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAACrB,EAAA,CA7BID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}