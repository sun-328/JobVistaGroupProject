{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/PanelistPage/ApplicantText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Text } from \"../Text/Text\";\nimport AdminBox from \"../AdminBox/AdminBox\";\nimport Style from \"../PanelistPage/ApplicantText.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PanelistTextPrint = () => {\n  _s();\n  const [totalOpeningsJson, setTotalOpeningsJson] = useState({\n    \"totalOpenings\": '',\n    \"totalApplicants\": '',\n    \"selectedApplicants\": ''\n  });\n  const domain = localStorage.getItem(\"domain\");\n  const fetchData = () => {\n    fetch(`http://${domain}/JobVista/Graph`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'Application/JSON'\n      },\n      body: JSON.stringify({\n        'userDetails': JSON.parse(localStorage.getItem('userDetails'))\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      totalOpeningsJson.totalOpenings = result.departmentDetails.totalOpenings;\n      totalOpeningsJson.totalApplicants = result.departmentDetails.totalApplicants;\n      totalOpeningsJson.selectedApplicants = result.departmentDetails.selectedApplicants;\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: Style.mainDivPanelist,\n    children: [/*#__PURE__*/_jsxDEV(AdminBox, {\n      id: Style.commonPanelistStyle,\n      iconId: Style.iconId,\n      commonId: S,\n      title: \"Total Openings\",\n      hireCount: totalOpeningsJson.totalOpenings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AdminBox, {\n      id: Style.commonPanelistStyle,\n      iconId: Style.iconId,\n      title: \"Total Applicants\",\n      hireCount: totalOpeningsJson.totalApplicants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AdminBox, {\n      id: Style.commonPanelistStyle,\n      iconId: Style.iconId,\n      title: \"Selected Applicants\",\n      hireCount: totalOpeningsJson.selectedApplicants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(PanelistTextPrint, \"7MV2vxM3j2WJf/KoADMxQTgtkMU=\");\n_c = PanelistTextPrint;\nexport default PanelistTextPrint;\nvar _c;\n$RefreshReg$(_c, \"PanelistTextPrint\");","map":{"version":3,"names":["React","useState","useEffect","Text","AdminBox","Style","jsxDEV","_jsxDEV","PanelistTextPrint","_s","totalOpeningsJson","setTotalOpeningsJson","domain","localStorage","getItem","fetchData","fetch","method","headers","body","JSON","stringify","parse","then","response","ok","Error","status","json","result","totalOpenings","departmentDetails","totalApplicants","selectedApplicants","catch","error","console","id","mainDivPanelist","children","commonPanelistStyle","iconId","commonId","S","title","hireCount","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/PanelistPage/ApplicantText.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text } from \"../Text/Text\";\nimport AdminBox from \"../AdminBox/AdminBox\";\nimport Style from \"../PanelistPage/ApplicantText.module.css\"\n\n\nconst PanelistTextPrint = () => {\n    const [totalOpeningsJson, setTotalOpeningsJson] = useState({\n        \"totalOpenings\": '',\n        \"totalApplicants\": '',\n        \"selectedApplicants\": ''\n    });\n    const domain = localStorage.getItem(\"domain\");\n    const fetchData = () => {\n        fetch(`http://${domain}/JobVista/Graph`, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'Application/JSON'\n            },\n            body: JSON.stringify({ 'userDetails': JSON.parse(localStorage.getItem('userDetails')) })\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(result => {\n                totalOpeningsJson.totalOpenings = result.departmentDetails.totalOpenings;\n                totalOpeningsJson.totalApplicants = result.departmentDetails.totalApplicants;\n                totalOpeningsJson.selectedApplicants = result.departmentDetails.selectedApplicants;\n\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n            });\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div id={Style.mainDivPanelist}>\n            {/* <Text>Total Openings :  {totalOpeningsJson.totalOpenings}</Text>\n            <Text>Total Applicants :  {totalOpeningsJson.totalApplicants}</Text>\n            <Text>Selected Applicants :  {totalOpeningsJson.selectedApplicants}</Text> */}\n\n            <AdminBox id={Style.commonPanelistStyle} iconId={Style.iconId} commonId={S} title=\"Total Openings\" hireCount = {totalOpeningsJson.totalOpenings}/>\n            <AdminBox id={Style.commonPanelistStyle} iconId={Style.iconId} title=\"Total Applicants\" hireCount = {totalOpeningsJson.totalApplicants}/>\n            <AdminBox id={Style.commonPanelistStyle} iconId={Style.iconId} title=\"Selected Applicants\" hireCount = {totalOpeningsJson.selectedApplicants}/>\n            {/* <AdminBox title=\"\"/> */}\n        </div>\n\n    );\n};\n\nexport default PanelistTextPrint;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}