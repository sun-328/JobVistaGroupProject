{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useState, useEffect } from \"react\";\n// import Chart from \"chart.js/auto\";\n// import { Pie } from \"react-chartjs-2\";\n\n// const LineChart = () => {\n//     const [labelData, setLabelData] = useState([]);\n//     const [label, setLabel] = useState([]);\n//     const [datas, setDatas] = useState([]);\n//     const data = {\n//         labels: label,\n//         datasets: [\n//             {\n//                 label: \"My First dataset\",\n//                 backgroundColor: \"rgb(255, 99, 132)\",\n//                 borderColor: \"rgb(255, 240, 132)\",\n//                 data: datas,\n//             },\n//         ],\n//     };\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:8080/JobVista/Graphs\", {\n//             method: 'GET',\n//             headers: {\n//                 'Content-type': 'Application/JSON'\n//             }\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error! Status: ${response.status}`);\n//                 }\n//                 return response.json();\n//             })\n//             .then(result => {\n//                 // console.log(\"Fetched data:\", result);\n//                 console.log(result.selectedApplicantsGraphInDepartments);\n//                 setLabelData(result.selectedApplicantsGraphInDepartments);\n//                 console.log(\"Label: \" + label);\n//                 if (labelData.length > 0) {\n//                     const firstItem = labelData[0];\n//                     const keys = Object.keys(firstItem);\n//                     const values = Object.values(firstItem);\n//                     setLabel((prevArray) => [...prevArray, keys])\n//                     setDatas((prevArray) => [...prevArray, values])\n//                     console.log(\"label1: \" + label);\n//                     console.log(\"datas1: \" + datas);\n//                 }\n\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }, []);\n\n//     useEffect(() => {\n//         console.log(\"labelData: \" + labelData);\n//       },[labelData])\n\n//     useEffect(() => {\n//         console.log(\"label: \" + label);\n//         console.log(\"datas: \" + datas);\n//     }, [label, datas]);\n\n//     return (\n//         <div>\n//             <Pie data={data} />\n//         </div>\n//     );\n// };\n\n// export default LineChart; \n\n// Import statements...\n\nconst LineChart = () => {\n  _s();\n  const [label, setLabel] = useState([]);\n  const [datas, setDatas] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      const selectedApplicantsGraphInDepartments = result.selectedApplicantsGraphInDepartments;\n      console.log(selectedApplicantsGraphInDepartments);\n      if (selectedApplicantsGraphInDepartments.length > 0) {\n        const firstItem = selectedApplicantsGraphInDepartments[0];\n        const keys = Object.keys(firstItem);\n        const values = Object.values(firstItem);\n        setLabel(prevArray => [...prevArray, ...keys]);\n        setDatas(prevArray => [...prevArray, ...values]);\n        console.log(\"label:\", label);\n        console.log(\"datas:\", datas);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"label:\", label);\n    console.log(\"datas:\", datas);\n  }, [label, datas]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: {\n        labels: label,\n        datasets: [{\n          label: \"My First dataset\",\n          backgroundColor: \"rgb(255, 99, 132)\",\n          borderColor: \"rgb(255, 240, 132)\",\n          data: datas\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_s(LineChart, \"vtWvVqLy3hWMIMepzpWaKVcDEpU=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["LineChart","_s","label","setLabel","useState","datas","setDatas","useEffect","fetch","method","headers","then","response","ok","Error","status","json","result","selectedApplicantsGraphInDepartments","console","log","length","firstItem","keys","Object","values","prevArray","catch","error","_jsxDEV","children","Pie","data","labels","datasets","backgroundColor","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Chart from \"chart.js/auto\";\n// import { Pie } from \"react-chartjs-2\";\n\n// const LineChart = () => {\n//     const [labelData, setLabelData] = useState([]);\n//     const [label, setLabel] = useState([]);\n//     const [datas, setDatas] = useState([]);\n//     const data = {\n//         labels: label,\n//         datasets: [\n//             {\n//                 label: \"My First dataset\",\n//                 backgroundColor: \"rgb(255, 99, 132)\",\n//                 borderColor: \"rgb(255, 240, 132)\",\n//                 data: datas,\n//             },\n//         ],\n//     };\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:8080/JobVista/Graphs\", {\n//             method: 'GET',\n//             headers: {\n//                 'Content-type': 'Application/JSON'\n//             }\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error! Status: ${response.status}`);\n//                 }\n//                 return response.json();\n//             })\n//             .then(result => {\n//                 // console.log(\"Fetched data:\", result);\n//                 console.log(result.selectedApplicantsGraphInDepartments);\n//                 setLabelData(result.selectedApplicantsGraphInDepartments);\n//                 console.log(\"Label: \" + label);\n//                 if (labelData.length > 0) {\n//                     const firstItem = labelData[0];\n//                     const keys = Object.keys(firstItem);\n//                     const values = Object.values(firstItem);\n//                     setLabel((prevArray) => [...prevArray, keys])\n//                     setDatas((prevArray) => [...prevArray, values])\n//                     console.log(\"label1: \" + label);\n//                     console.log(\"datas1: \" + datas);\n//                 }\n\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }, []);\n    \n//     useEffect(() => {\n//         console.log(\"labelData: \" + labelData);\n//       },[labelData])\n\n//     useEffect(() => {\n//         console.log(\"label: \" + label);\n//         console.log(\"datas: \" + datas);\n//     }, [label, datas]);\n\n//     return (\n//         <div>\n//             <Pie data={data} />\n//         </div>\n//     );\n// };\n\n// export default LineChart; \n\n\n\n\n// Import statements...\n\nconst LineChart = () => {\n    const [label, setLabel] = useState([]);\n    const [datas, setDatas] = useState([]);\n\n    useEffect(() => {\n        fetch(\"http://localhost:8080/JobVista/Graphs\", {\n            method: 'GET',\n            headers: {\n                'Content-type': 'Application/JSON'\n            }\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(result => {\n                const selectedApplicantsGraphInDepartments = result.selectedApplicantsGraphInDepartments;\n                console.log(selectedApplicantsGraphInDepartments);\n\n                if (selectedApplicantsGraphInDepartments.length > 0) {\n                    const firstItem = selectedApplicantsGraphInDepartments[0];\n                    const keys = Object.keys(firstItem);\n                    const values = Object.values(firstItem);\n                    setLabel((prevArray) => [...prevArray, ...keys])\n                    setDatas((prevArray) => [...prevArray, ...values])\n                    console.log(\"label:\", label);\n                    console.log(\"datas:\", datas);\n                }\n\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n            });\n    }, []);\n    \n    useEffect(() => {\n        console.log(\"label:\", label);\n        console.log(\"datas:\", datas);\n    }, [label, datas]);\n\n    return (\n        <div>\n            <Pie data={{ labels: label, datasets: [{ label: \"My First dataset\", backgroundColor: \"rgb(255, 99, 132)\", borderColor: \"rgb(255, 240, 132)\", data: datas }] }} />\n        </div>\n    );\n};\n\nexport default LineChart;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}