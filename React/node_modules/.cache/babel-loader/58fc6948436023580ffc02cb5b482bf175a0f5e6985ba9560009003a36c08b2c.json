{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const [graphResult, setGraphResult] = useState(null);\n  const [labelData, setLabelData] = useState([]);\n  const [label, setLabel] = useState([]);\n  const [datas, setDatas] = useState([]);\n  const data = {\n    labels: label,\n    datasets: [{\n      label: \"My First dataset\",\n      backgroundColor: \"rgb(255, 99, 132)\",\n      borderColor: \"rgb(255, 240, 132)\",\n      data: datas\n    }]\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/JobVista/Graphs\", {\n          method: 'GET',\n          headers: {\n            'Content-type': 'Application/JSON'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = await response.json();\n        console.log(\"Fetched data:\", result);\n        setGraphResult(result);\n        console.log(\"graphResult:\", graphResult);\n        setLabelData(result.selectedApplicantsGraphInDepartments);\n        console.log(\"labelData:\", labelData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // console.log(label);\n  // setDatas(Object.keys(label));\n  // console.log(datas);\n\n  // {labelData.map(((Object.keys(label)), index) => (\n  //     setLabel(prevArray => [...prevArray, item])\n  // ))}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChart, \"zo0v+ZAa1ubT/SdoX7qp+kdxhlM=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","Pie","jsxDEV","_jsxDEV","LineChart","_s","graphResult","setGraphResult","labelData","setLabelData","label","setLabel","datas","setDatas","data","labels","datasets","backgroundColor","borderColor","fetchData","response","fetch","method","headers","ok","Error","status","result","json","console","log","selectedApplicantsGraphInDepartments","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"; \nimport Chart from \"chart.js/auto\"; \nimport { Pie } from \"react-chartjs-2\"; \n\nconst LineChart = () => {\n    const [graphResult , setGraphResult] = useState(null);\n    const [labelData, setLabelData] = useState([]);\n    const [label, setLabel] = useState([]);\n    const [datas, setDatas] = useState([]);   \n    const data = {\n        labels: label,\n        datasets: [\n          {\n            label: \"My First dataset\", \n            backgroundColor: \"rgb(255, 99, 132)\", \n            borderColor: \"rgb(255, 240, 132)\", \n            data: datas, \n          },\n        ],\n      };\n\n      useEffect(() => {\n        const fetchData = async () => {\n          try {\n            const response = await fetch(\"http://localhost:8080/JobVista/Graphs\", {\n              method: 'GET',\n              headers: {\n                'Content-type': 'Application/JSON'\n              }\n            });\n      \n            if (!response.ok) {\n              throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n      \n            const result = await response.json();\n            console.log(\"Fetched data:\", result);\n      \n            setGraphResult(result);\n            console.log(\"graphResult:\", graphResult);\n      \n            setLabelData(result.selectedApplicantsGraphInDepartments);\n            console.log(\"labelData:\", labelData);\n          } catch (error) {\n            console.error('Error fetching data:', error);\n          }\n        };\n      \n        fetchData();\n      }, []);\n      \n\n  \n        // console.log(label);\n        // setDatas(Object.keys(label));\n        // console.log(datas);\n\n        // {labelData.map(((Object.keys(label)), index) => (\n        //     setLabel(prevArray => [...prevArray, item])\n        // ))}\n\n  return (\n    <div>\n      <Pie data={data} /> \n    </div>\n  );\n};\n\nexport default LineChart; \n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAGC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACrD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMgB,IAAI,GAAG;IACTC,MAAM,EAAEL,KAAK;IACbM,QAAQ,EAAE,CACR;MACEN,KAAK,EAAE,kBAAkB;MACzBO,eAAe,EAAE,mBAAmB;MACpCC,WAAW,EAAE,oBAAoB;MACjCJ,IAAI,EAAEF;IACR,CAAC;EAEL,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UACpEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBL,QAAQ,CAACM,MAAO,EAAC,CAAC;QAC3D;QAEA,MAAMC,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACpCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,MAAM,CAAC;QAEpCpB,cAAc,CAACoB,MAAM,CAAC;QACtBE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAExB,WAAW,CAAC;QAExCG,YAAY,CAACkB,MAAM,CAACI,oCAAoC,CAAC;QACzDF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEtB,SAAS,CAAC;MACtC,CAAC,CAAC,OAAOwB,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDb,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAIJ;EACA;EACA;;EAEA;EACA;EACA;;EAEN,oBACEhB,OAAA;IAAA8B,QAAA,eACE9B,OAAA,CAACF,GAAG;MAACa,IAAI,EAAEA;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAAChC,EAAA,CA9DID,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAgEf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}