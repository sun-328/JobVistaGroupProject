{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Chart from \"chart.js/auto\";\n// import { Pie } from \"react-chartjs-2\";\n\n// const LineChart = () => {\n//     const [labelData, setLabelData] = useState([]);\n//     const [label, setLabel] = useState([]);\n//     const [datas, setDatas] = useState([]);\n//     const data = {\n//         labels: label,\n//         datasets: [\n//             {\n//                 label: \"My First dataset\",\n//                 backgroundColor: \"rgb(255, 99, 132)\",\n//                 borderColor: \"rgb(255, 240, 132)\",\n//                 data: datas,\n//             },\n//         ],\n//     };\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:8080/JobVista/Graphs\", {\n//             method: 'GET',\n//             headers: {\n//                 'Content-type': 'Application/JSON'\n//             }\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error! Status: ${response.status}`);\n//                 }\n//                 return response.json();\n//             })\n//             .then(result => {\n//                 // console.log(\"Fetched data:\", result);\n//                 console.log(result.selectedApplicantsGraphInDepartments);\n//                 setLabelData(result.selectedApplicantsGraphInDepartments);\n//                 console.log(\"Label: \" + label);\n//                 if (labelData.length > 0) {\n//                     const firstItem = labelData[0];\n//                     const keys = Object.keys(firstItem);\n//                     const values = Object.values(firstItem);\n//                     setLabel((prevArray) => [...prevArray, keys])\n//                     setDatas((prevArray) => [...prevArray, values])\n//                     console.log(\"label1: \" + label);\n//                     console.log(\"datas1: \" + datas);\n//                 }\n\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }, []);\n\n//     useEffect(() => {\n//         console.log(\"labelData: \" + labelData);\n//       },[labelData])\n\n//     useEffect(() => {\n//         console.log(\"label: \" + label);\n//         console.log(\"datas: \" + datas);\n//     }, [label, datas]);\n\n//     return (\n//         <div>\n//             <Pie data={data} />\n//         </div>\n//     );\n// };\n\n// export default LineChart; \n\n// Import statements...\n\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const [label, setLabel] = useState([]);\n  const [dataSeting, setdata] = useState([]);\n  const fetchData = () => {};\n  useEffect(() => {\n    console.log(\"label:\", label);\n    console.log(\"datas:\", dataSeting);\n  }, [label, dataSeting]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: {\n        labels: label,\n        dataSeting: [{\n          label: \"My First dataset\",\n          backgroundColor: \"rgb(255, 99, 132)\",\n          borderColor: \"rgb(255, 240, 132)\",\n          data: dataSeting\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(LineChart, \"DYQwUvYZE3t1FnUkEAxDjwwe3ZU=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","Pie","jsxDEV","_jsxDEV","LineChart","_s","label","setLabel","dataSeting","setdata","fetchData","console","log","children","data","labels","backgroundColor","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Chart from \"chart.js/auto\";\n// import { Pie } from \"react-chartjs-2\";\n\n// const LineChart = () => {\n//     const [labelData, setLabelData] = useState([]);\n//     const [label, setLabel] = useState([]);\n//     const [datas, setDatas] = useState([]);\n//     const data = {\n//         labels: label,\n//         datasets: [\n//             {\n//                 label: \"My First dataset\",\n//                 backgroundColor: \"rgb(255, 99, 132)\",\n//                 borderColor: \"rgb(255, 240, 132)\",\n//                 data: datas,\n//             },\n//         ],\n//     };\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:8080/JobVista/Graphs\", {\n//             method: 'GET',\n//             headers: {\n//                 'Content-type': 'Application/JSON'\n//             }\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error! Status: ${response.status}`);\n//                 }\n//                 return response.json();\n//             })\n//             .then(result => {\n//                 // console.log(\"Fetched data:\", result);\n//                 console.log(result.selectedApplicantsGraphInDepartments);\n//                 setLabelData(result.selectedApplicantsGraphInDepartments);\n//                 console.log(\"Label: \" + label);\n//                 if (labelData.length > 0) {\n//                     const firstItem = labelData[0];\n//                     const keys = Object.keys(firstItem);\n//                     const values = Object.values(firstItem);\n//                     setLabel((prevArray) => [...prevArray, keys])\n//                     setDatas((prevArray) => [...prevArray, values])\n//                     console.log(\"label1: \" + label);\n//                     console.log(\"datas1: \" + datas);\n//                 }\n\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }, []);\n    \n//     useEffect(() => {\n//         console.log(\"labelData: \" + labelData);\n//       },[labelData])\n\n//     useEffect(() => {\n//         console.log(\"label: \" + label);\n//         console.log(\"datas: \" + datas);\n//     }, [label, datas]);\n\n//     return (\n//         <div>\n//             <Pie data={data} />\n//         </div>\n//     );\n// };\n\n// export default LineChart; \n\n\n\n\n// Import statements...\n\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Pie } from \"react-chartjs-2\";\n\nconst LineChart = () => {\n    const [label, setLabel] = useState([]);\n    const [dataSeting, setdata] = useState([]);\n\n    const fetchData = () => {\n        \n    }\n\n    useEffect(() => {\n        console.log(\"label:\", label);\n        console.log(\"datas:\", dataSeting);\n    }, [label, dataSeting]);\n\n    return (\n        <div>\n            <Pie data={{ labels: label, dataSeting: [{ label: \"My First dataset\", backgroundColor: \"rgb(255, 99, 132)\", borderColor: \"rgb(255, 240, 132)\", data: dataSeting }] }} />\n        </div>\n    );\n};\n\nexport default LineChart;\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,UAAU,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,SAAS,GAAGA,CAAA,KAAM,CAExB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZY,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,KAAK,CAAC;IAC5BK,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,UAAU,CAAC;EACrC,CAAC,EAAE,CAACF,KAAK,EAAEE,UAAU,CAAC,CAAC;EAEvB,oBACIL,OAAA;IAAAU,QAAA,eACIV,OAAA,CAACF,GAAG;MAACa,IAAI,EAAE;QAAEC,MAAM,EAAET,KAAK;QAAEE,UAAU,EAAE,CAAC;UAAEF,KAAK,EAAE,kBAAkB;UAAEU,eAAe,EAAE,mBAAmB;UAAEC,WAAW,EAAE,oBAAoB;UAAEH,IAAI,EAAEN;QAAW,CAAC;MAAE;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvK,CAAC;AAEd,CAAC;AAAChB,EAAA,CAlBID,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}