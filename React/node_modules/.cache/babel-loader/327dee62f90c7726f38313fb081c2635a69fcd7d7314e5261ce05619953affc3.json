{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/PanelistPage/ApplicantText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Text } from \"../Text/Text\";\nimport AdminBox from \"../AdminBox/AdminBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PanelistTextPrint = () => {\n  _s();\n  const [totalOpeningsJson, setTotalOpeningsJson] = useState({\n    \"totalOpenings\": '',\n    \"totalApplicants\": '',\n    \"selectedApplicants\": ''\n  });\n  const fetchData = () => {\n    fetch(\"http://localhost:8080/JobVista/Graph\", {\n      method: 'POST',\n      headers: {\n        'Content-type': 'Application/JSON'\n      },\n      body: JSON.stringify({\n        'userDetails': JSON.parse(localStorage.getItem('userDetails'))\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      console.log(\"chart: \", result);\n      totalOpeningsJson.totalOpenings = result.departmentDetails.totalOpenings;\n      totalOpeningsJson.totalApplicants = result.departmentDetails.totalApplicants;\n      totalOpeningsJson.selectedApplicants = result.departmentDetails.selectedApplicants;\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminBox, {\n      title: \"TotalOpenings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AdminBox, {\n      title: \"HIreCound\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(PanelistTextPrint, \"7MV2vxM3j2WJf/KoADMxQTgtkMU=\");\n_c = PanelistTextPrint;\nexport default PanelistTextPrint;\nvar _c;\n$RefreshReg$(_c, \"PanelistTextPrint\");","map":{"version":3,"names":["React","useState","useEffect","Text","AdminBox","jsxDEV","_jsxDEV","PanelistTextPrint","_s","totalOpeningsJson","setTotalOpeningsJson","fetchData","fetch","method","headers","body","JSON","stringify","parse","localStorage","getItem","then","response","ok","Error","status","json","result","console","log","totalOpenings","departmentDetails","totalApplicants","selectedApplicants","catch","error","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/PanelistPage/ApplicantText.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text } from \"../Text/Text\";\nimport AdminBox from \"../AdminBox/AdminBox\";\n\n\nconst PanelistTextPrint = () => {\n    const [totalOpeningsJson, setTotalOpeningsJson] = useState({\n        \"totalOpenings\": '',\n        \"totalApplicants\": '',\n        \"selectedApplicants\": ''\n    });\n\n    const fetchData = () => {\n        fetch(\"http://localhost:8080/JobVista/Graph\", {\n            method: 'POST',\n            headers: {\n                'Content-type': 'Application/JSON'\n            },\n            body: JSON.stringify({ 'userDetails': JSON.parse(localStorage.getItem('userDetails')) })\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(result => {\n                console.log(\"chart: \", result);\n                totalOpeningsJson.totalOpenings = result.departmentDetails.totalOpenings;\n                totalOpeningsJson.totalApplicants = result.departmentDetails.totalApplicants;\n                totalOpeningsJson.selectedApplicants = result.departmentDetails.selectedApplicants;\n\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n            });\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            {/* <Text>Total Openings :  {totalOpeningsJson.totalOpenings}</Text>\n            <Text>Total Applicants :  {totalOpeningsJson.totalApplicants}</Text>\n            <Text>Selected Applicants :  {totalOpeningsJson.selectedApplicants}</Text> */}\n\n            <AdminBox title=\"TotalOpenings\"/>\n            <AdminBox title=\"HIreCound\"/>\n        </div>\n\n    );\n};\n\nexport default PanelistTextPrint;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,cAAc;AACnC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC;IACvD,eAAe,EAAE,EAAE;IACnB,iBAAiB,EAAE,EAAE;IACrB,oBAAoB,EAAE;EAC1B,CAAC,CAAC;EAEF,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACpBC,KAAK,CAAC,sCAAsC,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,aAAa,EAAED,IAAI,CAACE,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAAE,CAAC;IAC3F,CAAC,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;MAC7D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAACM,MAAM,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC;MAC9BlB,iBAAiB,CAACqB,aAAa,GAAGH,MAAM,CAACI,iBAAiB,CAACD,aAAa;MACxErB,iBAAiB,CAACuB,eAAe,GAAGL,MAAM,CAACI,iBAAiB,CAACC,eAAe;MAC5EvB,iBAAiB,CAACwB,kBAAkB,GAAGN,MAAM,CAACI,iBAAiB,CAACE,kBAAkB;IAEtF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACZS,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAA8B,QAAA,gBAKI9B,OAAA,CAACF,QAAQ;MAACiC,KAAK,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjCnC,OAAA,CAACF,QAAQ;MAACiC,KAAK,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAGd,CAAC;AAACjC,EAAA,CAhDID,iBAAiB;AAAAmC,EAAA,GAAjBnC,iBAAiB;AAkDvB,eAAeA,iBAAiB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}