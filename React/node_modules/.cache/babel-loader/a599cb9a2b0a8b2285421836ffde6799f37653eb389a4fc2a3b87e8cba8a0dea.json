{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/PanelistPage/ApplicantsChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Style from '../BarChart/Bar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChart = () => {\n  _s();\n  const [label, setLabel] = useState([]);\n  const [datavalue, setdatavalue] = useState([]);\n\n  // useEffect(() => {\n  //     const result = {\"selectedApplicantsGraphInOpenings\":{\"Software develeoper\":22},\"getApplicantsStatusGraph\":{\"Onhold\":38,\"Selected\":22,\"Rejected\":9},\"selectedApplicantsGraphInYear\":{\"2022\":22},\"statusCode\":200};\n  //     const applicantsStatusGraph = result.getApplicantsStatusGraph;\n\n  //     if ((Object.keys(applicantsStatusGraph)).length > 0) {\n  //         const entries = Object.entries(applicantsStatusGraph);\n  //         if (entries.length === 1) {\n  //             setLabel(entries.map(([key, _]) => key));\n  //             setdatavalue(entries.map(([_, value]) => value));\n  //         } else {\n  //             const mergedEntry = entries.reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n  //             setLabel(Object.keys(mergedEntry));\n  //             setdatavalue(Object.values(mergedEntry));\n  //         }\n  //     }\n  // }, []);\n\n  // const fetchData = () => {\n  //     fetch(\"http://localhost:8080/JobVista/Graph\", {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-type': 'Application/JSON'\n  //         },\n  //         body: JSON.stringify({ 'userDetails': JSON.parse(localStorage.getItem('userDetails')) })\n  //     })\n  //         .then(response => {\n  //             if (!response.ok) {\n  //                 throw new Error(`HTTP error! Status: ${response.status}`);\n  //             }\n  //             return response.json();\n  //         })\n  //         .then(result => {\n  //             console.log(\"chart: \", result);\n  //             const applicantsStatusGraph = result.getApplicantsStatusGraph;\n\n  //             if ((Object.keys(applicantsStatusGraph)).length > 0) {\n  //                 const entries = Object.entries(applicantsStatusGraph);\n  //                 if (entries.length === 1) {\n  //                     setLabel(entries.map(([key, _]) => key));\n  //                     setdatavalue(entries.map(([_, value]) => value));\n  //                 } else {\n  //                     const mergedEntry = entries.reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n  //                     setLabel(Object.keys(mergedEntry));\n  //                     setdatavalue(Object.values(mergedEntry));\n  //                 }\n\n  //             }\n\n  //         })\n  //         .catch(error => {\n  //             console.error('Error fetching data:', error);\n  //         });\n  // }\n\n  // useEffect(() => {\n  //     fetchData();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: Style.chartId,\n    className: Style.chart,\n    children: label.length > 0 ? /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: {\n        labels: label,\n        datasets: [{\n          label: \"\",\n          data: datavalue,\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        circumference: 360\n        // rotation: 270\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(PieChart, \"uj8MyW6x53eTij78fpMmg78ZNzc=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","Doughnut","Style","jsxDEV","_jsxDEV","PieChart","_s","label","setLabel","datavalue","setdatavalue","id","chartId","className","chart","children","length","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","circumference","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/PanelistPage/ApplicantsChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Style from '../BarChart/Bar.module.css';\n\n\nconst PieChart = () => {\n    const [label, setLabel] = useState([]);\n    const [datavalue, setdatavalue] = useState([]);\n\n    // useEffect(() => {\n    //     const result = {\"selectedApplicantsGraphInOpenings\":{\"Software develeoper\":22},\"getApplicantsStatusGraph\":{\"Onhold\":38,\"Selected\":22,\"Rejected\":9},\"selectedApplicantsGraphInYear\":{\"2022\":22},\"statusCode\":200};\n    //     const applicantsStatusGraph = result.getApplicantsStatusGraph;\n\n    //     if ((Object.keys(applicantsStatusGraph)).length > 0) {\n    //         const entries = Object.entries(applicantsStatusGraph);\n    //         if (entries.length === 1) {\n    //             setLabel(entries.map(([key, _]) => key));\n    //             setdatavalue(entries.map(([_, value]) => value));\n    //         } else {\n    //             const mergedEntry = entries.reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n    //             setLabel(Object.keys(mergedEntry));\n    //             setdatavalue(Object.values(mergedEntry));\n    //         }\n    //     }\n    // }, []);\n\n    // const fetchData = () => {\n    //     fetch(\"http://localhost:8080/JobVista/Graph\", {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-type': 'Application/JSON'\n    //         },\n    //         body: JSON.stringify({ 'userDetails': JSON.parse(localStorage.getItem('userDetails')) })\n    //     })\n    //         .then(response => {\n    //             if (!response.ok) {\n    //                 throw new Error(`HTTP error! Status: ${response.status}`);\n    //             }\n    //             return response.json();\n    //         })\n    //         .then(result => {\n    //             console.log(\"chart: \", result);\n    //             const applicantsStatusGraph = result.getApplicantsStatusGraph;\n\n    //             if ((Object.keys(applicantsStatusGraph)).length > 0) {\n    //                 const entries = Object.entries(applicantsStatusGraph);\n    //                 if (entries.length === 1) {\n    //                     setLabel(entries.map(([key, _]) => key));\n    //                     setdatavalue(entries.map(([_, value]) => value));\n    //                 } else {\n    //                     const mergedEntry = entries.reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n    //                     setLabel(Object.keys(mergedEntry));\n    //                     setdatavalue(Object.values(mergedEntry));\n    //                 }\n\n\n    //             }\n\n    //         })\n    //         .catch(error => {\n    //             console.error('Error fetching data:', error);\n    //         });\n    // }\n\n    // useEffect(() => {\n    //     fetchData();\n    // }, []);\n\n    return (\n        <div id={Style.chartId} className={Style.chart}>\n            {label.length > 0 ? (\n                <Doughnut\n                    data={{\n                        labels: label,\n                        datasets: [{\n                            label: \"\",\n                            data: datavalue,\n                            backgroundColor: [\n                                \"rgba(255, 99, 132, 0.2)\",\n                                \"rgba(54, 162, 235, 0.2)\",\n                                \"rgba(255, 206, 86, 0.2)\",\n                                \"rgba(75, 192, 192, 0.2)\",\n                                \"rgba(153, 102, 255, 0.2)\",\n                                \"rgba(255, 159, 64, 0.2)\"\n                            ],\n                            borderColor: [\n                                \"rgba(255, 99, 132, 1)\",\n                                \"rgba(54, 162, 235, 1)\",\n                                \"rgba(255, 206, 86, 1)\",\n                                \"rgba(75, 192, 192, 1)\",\n                                \"rgba(153, 102, 255, 1)\",\n                                \"rgba(255, 159, 64, 1)\"\n                            ],\n                            borderWidth: 1\n                        }]\n                    }}\n                    options={{\n                        circumference: 360\n                        // rotation: 270\n                    }}\n                />\n            ) : (\n                <p>No data available</p>\n            )}\n        </div>\n    );\n};\n\nexport default PieChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,KAAK,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACIM,OAAA;IAAKO,EAAE,EAAET,KAAK,CAACU,OAAQ;IAACC,SAAS,EAAEX,KAAK,CAACY,KAAM;IAAAC,QAAA,EAC1CR,KAAK,CAACS,MAAM,GAAG,CAAC,gBACbZ,OAAA,CAACH,QAAQ;MACLgB,IAAI,EAAE;QACFC,MAAM,EAAEX,KAAK;QACbY,QAAQ,EAAE,CAAC;UACPZ,KAAK,EAAE,EAAE;UACTU,IAAI,EAAER,SAAS;UACfW,eAAe,EAAE,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,CAC5B;UACDC,WAAW,EAAE,CACT,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,wBAAwB,EACxB,uBAAuB,CAC1B;UACDC,WAAW,EAAE;QACjB,CAAC;MACL,CAAE;MACFC,OAAO,EAAE;QACLC,aAAa,EAAE;QACf;MACJ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,gBAEFxB,OAAA;MAAAW,QAAA,EAAG;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACtB,EAAA,CArGID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAuGd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}