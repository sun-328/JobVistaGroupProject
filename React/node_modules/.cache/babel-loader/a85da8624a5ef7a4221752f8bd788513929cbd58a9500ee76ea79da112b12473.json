{"ast":null,"code":"\n\n// import React, { useState, useEffect } from \"react\";\n// import Chart from \"chart.js/auto\";\n// import { Pie } from \"react-chartjs-2\";\n\n// // box-sizing: border-box;\n// // display: block;\n// // height: 318px;\n// // width: 754px;\n\n// const LineChart = () => {\n//     const [label, setLabel] = useState([]);\n//     const [dataSeting, setdata] = useState([]);\n\n//     const fetchData = () => {\n//         fetch(\"http://localhost:8080/JobVista/Graphs\", {\n//             method: 'GET',\n//             headers: {\n//                 'Content-type': 'Application/JSON'\n//             }\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error! Status: ${response.status}`);\n//                 }\n//                 return response.json();\n//             })\n//             .then(result => {\n//                 const selectedApplicantsGraphInDepartments = result.selectedApplicantsGraphInDepartments;\n//                 console.log(selectedApplicantsGraphInDepartments);\n//                 console.log(Object.keys(selectedApplicantsGraphInDepartments).length);\n\n//                 if ((Object.keys(selectedApplicantsGraphInDepartments)).length > 0) {\n//                     const getkeys = Object.entries(selectedApplicantsGraphInDepartments).map(([key, _]) => key);\n//                     const getvalues = Object.entries(selectedApplicantsGraphInDepartments).map(([_, value]) => value);\n//                     setLabel(getkeys);\n//                     setdata(getvalues);\n//                     console.log(\"label1:\", label);\n//                     console.log(\"datas1:\", dataSeting);\n//                 }\n\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);\n\n//     useEffect(() => {\n//         console.log(\"label:\", label);\n//         console.log(\"dataSeting:\", dataSeting);\n//     }, [label, dataSeting]);\n\n//     return (\n//         <div>\n//             <Pie data={{ labels: label, datasets: [{ label: \"Total Hire\", backgroundColor: \"rgb(255, 99, 132)\", borderColor: \"rgb(255, 240, 132)\", data: dataSeting }] }} />\n//         </div>\n//     );\n// };\n\n// export default LineChart;\n\n// import React, { useState, useEffect } from 'react';\n// import { Doughnut } from 'react-chartjs-2';\n\n// const data = {\n//     labels: ['IT', 'Finance', 'Engineering'],\n//     datasets: [{\n//         data: [1, 2, 5],\n//         backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n//         borderColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n//         borderWidth: 1,\n//     }],\n// };\n\n// const HalfCirclePieChart = ({ data }) => {\n//     const [chartData, setChartData] = useState(data);\n\n//     useEffect(() => {\n//         setChartData(data);\n//     }, [data]);\n\n//     const halfCircleOptions = {\n//         maintainAspectRatio: false,\n//         rotation: 1 * Math.PI,\n//         circumference: 1 * Math.PI,\n//     };\n//     HalfCirclePieChart(data);\n\n//     return (\n//         <div>\n//             <Doughnut data={chartData} options={halfCircleOptions} />\n//         </div>\n//     );\n// };\n\n// export default HalfCirclePieChart;","map":{"version":3,"names":[],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["\n\n// import React, { useState, useEffect } from \"react\";\n// import Chart from \"chart.js/auto\";\n// import { Pie } from \"react-chartjs-2\";\n\n\n\n// // box-sizing: border-box;\n// // display: block;\n// // height: 318px;\n// // width: 754px;\n\n\n// const LineChart = () => {\n//     const [label, setLabel] = useState([]);\n//     const [dataSeting, setdata] = useState([]);\n\n//     const fetchData = () => {\n//         fetch(\"http://localhost:8080/JobVista/Graphs\", {\n//             method: 'GET',\n//             headers: {\n//                 'Content-type': 'Application/JSON'\n//             }\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error! Status: ${response.status}`);\n//                 }\n//                 return response.json();\n//             })\n//             .then(result => {\n//                 const selectedApplicantsGraphInDepartments = result.selectedApplicantsGraphInDepartments;\n//                 console.log(selectedApplicantsGraphInDepartments);\n//                 console.log(Object.keys(selectedApplicantsGraphInDepartments).length);\n                \n\n//                 if ((Object.keys(selectedApplicantsGraphInDepartments)).length > 0) {\n//                     const getkeys = Object.entries(selectedApplicantsGraphInDepartments).map(([key, _]) => key);\n//                     const getvalues = Object.entries(selectedApplicantsGraphInDepartments).map(([_, value]) => value);\n//                     setLabel(getkeys);\n//                     setdata(getvalues);\n//                     console.log(\"label1:\", label);\n//                     console.log(\"datas1:\", dataSeting);\n//                 }\n\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);\n\n//     useEffect(() => {\n//         console.log(\"label:\", label);\n//         console.log(\"dataSeting:\", dataSeting);\n//     }, [label, dataSeting]);\n\n//     return (\n//         <div>\n//             <Pie data={{ labels: label, datasets: [{ label: \"Total Hire\", backgroundColor: \"rgb(255, 99, 132)\", borderColor: \"rgb(255, 240, 132)\", data: dataSeting }] }} />\n//         </div>\n//     );\n// };\n\n// export default LineChart;\n\n// import React, { useState, useEffect } from 'react';\n// import { Doughnut } from 'react-chartjs-2';\n\n// const data = {\n//     labels: ['IT', 'Finance', 'Engineering'],\n//     datasets: [{\n//         data: [1, 2, 5],\n//         backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n//         borderColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n//         borderWidth: 1,\n//     }],\n// };\n\n\n// const HalfCirclePieChart = ({ data }) => {\n//     const [chartData, setChartData] = useState(data);\n   \n//     useEffect(() => {\n//         setChartData(data);\n//     }, [data]);\n\n//     const halfCircleOptions = {\n//         maintainAspectRatio: false,\n//         rotation: 1 * Math.PI,\n//         circumference: 1 * Math.PI,\n//     };\n//     HalfCirclePieChart(data);\n\n//     return (\n//         <div>\n//             <Doughnut data={chartData} options={halfCircleOptions} />\n//         </div>\n//     );\n// };\n\n// export default HalfCirclePieChart;\n"],"mappings":";;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}