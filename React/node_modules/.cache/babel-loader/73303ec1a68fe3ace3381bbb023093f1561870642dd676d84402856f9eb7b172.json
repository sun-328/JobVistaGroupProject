{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const [labelData, setLabelData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      console.log(\"Fetched data:\", result);\n      setLabelData(result.selectedApplicantsGraphInDepartments);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  const labels = labelData.map(item => Object.keys(item)[0]);\n  const datas = labelData.map(item => item[Object.keys(item)[0]]);\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: \"My First dataset\",\n      backgroundColor: \"rgb(255, 99, 132)\",\n      borderColor: \"rgb(255, 240, 132)\",\n      data: datas\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChart, \"TTCAfvJAR8dQlHEOnrLBmonMMFg=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","Pie","jsxDEV","_jsxDEV","LineChart","_s","labelData","setLabelData","fetch","method","headers","then","response","ok","Error","status","json","result","console","log","selectedApplicantsGraphInDepartments","catch","error","labels","map","item","Object","keys","datas","data","datasets","label","backgroundColor","borderColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"; \nimport Chart from \"chart.js/auto\"; \nimport { Pie } from \"react-chartjs-2\"; \n\nconst LineChart = () => {\n  const [labelData, setLabelData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(result => {\n      console.log(\"Fetched data:\", result);\n      setLabelData(result.selectedApplicantsGraphInDepartments);\n    })\n    .catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n\n  const labels = labelData.map(item => Object.keys(item)[0]);\n  const datas = labelData.map(item => item[Object.keys(item)[0]]);\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"My First dataset\",\n        backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 240, 132)\",\n        data: datas,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Pie data={data} />\n    </div>\n  );\n};\n\nexport default LineChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,uCAAuC,EAAE;MAC7CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;MAC3D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAACM,MAAM,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAAC;MACpCV,YAAY,CAACU,MAAM,CAACG,oCAAoC,CAAC;IAC3D,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAGjB,SAAS,CAACkB,GAAG,CAACC,IAAI,IAAIC,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAMG,KAAK,GAAGtB,SAAS,CAACkB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAE/D,MAAMI,IAAI,GAAG;IACXN,MAAM,EAAEA,MAAM;IACdO,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,kBAAkB;MACzBC,eAAe,EAAE,mBAAmB;MACpCC,WAAW,EAAE,oBAAoB;MACjCJ,IAAI,EAAED;IACR,CAAC;EAEL,CAAC;EAED,oBACEzB,OAAA;IAAA+B,QAAA,eACE/B,OAAA,CAACF,GAAG;MAAC4B,IAAI,EAAEA;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAACjC,EAAA,CA7CID,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}