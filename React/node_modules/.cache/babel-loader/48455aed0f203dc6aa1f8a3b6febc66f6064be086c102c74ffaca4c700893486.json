{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const [labelData, setLabelData] = useState([]);\n  const [label, setLabel] = useState([]);\n  const [datas, setDatas] = useState([]);\n  const data = {\n    labels: label,\n    datasets: [{\n      label: \"My First dataset\",\n      backgroundColor: \"rgb(255, 99, 132)\",\n      borderColor: \"rgb(255, 240, 132)\",\n      data: datas\n    }]\n  };\n  useEffect(() => {\n    first();\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      console.log(\"Fetched data:\", result);\n      console.log(result.selectedApplicantsGraphInDepartments);\n      setLabelData(result.selectedApplicantsGraphInDepartments);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n    second();\n  }, []);\n  function first() {}\n  function second() {\n    if (labelData.length > 0) {\n      const keys = Object.keys(labelData[0]);\n      setLabel(keys);\n      setDatas(keys.map(key => labelData[0][key]));\n    }\n    console.log(\"label: \", label);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(LineChart, \"7WOL+ioyb776Ol+jMXM2owv4nig=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","Pie","jsxDEV","_jsxDEV","LineChart","_s","labelData","setLabelData","label","setLabel","datas","setDatas","data","labels","datasets","backgroundColor","borderColor","first","fetch","method","headers","then","response","ok","Error","status","json","result","console","log","selectedApplicantsGraphInDepartments","catch","error","second","length","keys","Object","map","key","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Pie } from \"react-chartjs-2\";\n\nconst LineChart = () => {\n    const [labelData, setLabelData] = useState([]);\n    const [label, setLabel] = useState([]);\n    const [datas, setDatas] = useState([]);\n    const data = {\n        labels: label,\n        datasets: [\n            {\n                label: \"My First dataset\",\n                backgroundColor: \"rgb(255, 99, 132)\",\n                borderColor: \"rgb(255, 240, 132)\",\n                data: datas,\n            },\n        ],\n    };\n\n    useEffect(() => {\n        first()\n        fetch(\"http://localhost:8080/JobVista/Graphs\", {\n            method: 'GET',\n            headers: {\n                'Content-type': 'Application/JSON'\n            }\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(result => {\n                console.log(\"Fetched data:\", result);\n                console.log(result.selectedApplicantsGraphInDepartments);\n                setLabelData(result.selectedApplicantsGraphInDepartments);\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n            });\n            second();\n\n    }, []);\n\n    function first() {\n        \n    }\n\n    function second() {\n        if (labelData.length > 0) {\n            const keys = Object.keys(labelData[0]);\n            setLabel(keys);\n            setDatas(keys.map(key => labelData[0][key]));\n        }\n\n        console.log(\"label: \", label);\n    }\n\n    return (\n        <div>\n            <Pie data={data} />\n        </div>\n    );\n};\n\nexport default LineChart; \n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,IAAI,GAAG;IACTC,MAAM,EAAEL,KAAK;IACbM,QAAQ,EAAE,CACN;MACIN,KAAK,EAAE,kBAAkB;MACzBO,eAAe,EAAE,mBAAmB;MACpCC,WAAW,EAAE,oBAAoB;MACjCJ,IAAI,EAAEF;IACV,CAAC;EAET,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZkB,KAAK,CAAC,CAAC;IACPC,KAAK,CAAC,uCAAuC,EAAE;MAC3CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;MAC7D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAACM,MAAM,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAAC;MACpCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,oCAAoC,CAAC;MACxDvB,YAAY,CAACoB,MAAM,CAACG,oCAAoC,CAAC;IAC7D,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;IACFC,MAAM,CAAC,CAAC;EAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,SAAShB,KAAKA,CAAA,EAAG,CAEjB;EAEA,SAASgB,MAAMA,CAAA,EAAG;IACd,IAAI3B,SAAS,CAAC4B,MAAM,GAAG,CAAC,EAAE;MACtB,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAAC7B,SAAS,CAAC,CAAC,CAAC,CAAC;MACtCG,QAAQ,CAAC0B,IAAI,CAAC;MACdxB,QAAQ,CAACwB,IAAI,CAACE,GAAG,CAACC,GAAG,IAAIhC,SAAS,CAAC,CAAC,CAAC,CAACgC,GAAG,CAAC,CAAC,CAAC;IAChD;IAEAV,OAAO,CAACC,GAAG,CAAC,SAAS,EAAErB,KAAK,CAAC;EACjC;EAEA,oBACIL,OAAA;IAAAoC,QAAA,eACIpC,OAAA,CAACF,GAAG;MAACW,IAAI,EAAEA;IAAK;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEd,CAAC;AAACtC,EAAA,CA7DID,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AA+Df,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}