{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import Chart from \"chart.js/auto\";\n// import { Pie } from \"react-chartjs-2\";\n\n// const LineChart = () => {\n//     const [labelData, setLabelData] = useState([]);\n//     const [label, setLabel] = useState([]);\n//     const [datas, setDatas] = useState([]);\n//     const data = {\n//         labels: label,\n//         datasets: [\n//             {\n//                 label: \"My First dataset\",\n//                 backgroundColor: \"rgb(255, 99, 132)\",\n//                 borderColor: \"rgb(255, 240, 132)\",\n//                 data: datas,\n//             },\n//         ],\n//     };\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:8080/JobVista/Graphs\", {\n//             method: 'GET',\n//             headers: {\n//                 'Content-type': 'Application/JSON'\n//             }\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error! Status: ${response.status}`);\n//                 }\n//                 return response.json();\n//             })\n//             .then(result => {\n//                 // console.log(\"Fetched data:\", result);\n//                 console.log(result.selectedApplicantsGraphInDepartments);\n//                 setLabelData(result.selectedApplicantsGraphInDepartments);\n//                 console.log(\"Label: \" + label);\n//                 if (labelData.length > 0) {\n//                     const firstItem = labelData[0];\n//                     const keys = Object.keys(firstItem);\n//                     const values = Object.values(firstItem);\n//                     setLabel((prevArray) => [...prevArray, keys])\n//                     setDatas((prevArray) => [...prevArray, values])\n//                     console.log(\"label1: \" + label);\n//                     console.log(\"datas1: \" + datas);\n//                 }\n\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }, []);\n\n//     useEffect(() => {\n//         console.log(\"labelData: \" + labelData);\n//       },[labelData])\n\n//     useEffect(() => {\n//         console.log(\"label: \" + label);\n//         console.log(\"datas: \" + datas);\n//     }, [label, datas]);\n\n//     return (\n//         <div>\n//             <Pie data={data} />\n//         </div>\n//     );\n// };\n\n// export default LineChart;","map":{"version":3,"names":[],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Chart from \"chart.js/auto\";\n// import { Pie } from \"react-chartjs-2\";\n\n// const LineChart = () => {\n//     const [labelData, setLabelData] = useState([]);\n//     const [label, setLabel] = useState([]);\n//     const [datas, setDatas] = useState([]);\n//     const data = {\n//         labels: label,\n//         datasets: [\n//             {\n//                 label: \"My First dataset\",\n//                 backgroundColor: \"rgb(255, 99, 132)\",\n//                 borderColor: \"rgb(255, 240, 132)\",\n//                 data: datas,\n//             },\n//         ],\n//     };\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:8080/JobVista/Graphs\", {\n//             method: 'GET',\n//             headers: {\n//                 'Content-type': 'Application/JSON'\n//             }\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error! Status: ${response.status}`);\n//                 }\n//                 return response.json();\n//             })\n//             .then(result => {\n//                 // console.log(\"Fetched data:\", result);\n//                 console.log(result.selectedApplicantsGraphInDepartments);\n//                 setLabelData(result.selectedApplicantsGraphInDepartments);\n//                 console.log(\"Label: \" + label);\n//                 if (labelData.length > 0) {\n//                     const firstItem = labelData[0];\n//                     const keys = Object.keys(firstItem);\n//                     const values = Object.values(firstItem);\n//                     setLabel((prevArray) => [...prevArray, keys])\n//                     setDatas((prevArray) => [...prevArray, values])\n//                     console.log(\"label1: \" + label);\n//                     console.log(\"datas1: \" + datas);\n//                 }\n\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }, []);\n    \n//     useEffect(() => {\n//         console.log(\"labelData: \" + labelData);\n//       },[labelData])\n\n//     useEffect(() => {\n//         console.log(\"label: \" + label);\n//         console.log(\"datas: \" + datas);\n//     }, [label, datas]);\n\n//     return (\n//         <div>\n//             <Pie data={data} />\n//         </div>\n//     );\n// };\n\n// export default LineChart; \n\n\n\n\n\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}