{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/ApplicantPage/Openings.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { json, useNavigate } from 'react-router-dom';\nimport './OpenigsFeild.css';\nimport jsdata from './tempJson.json';\nimport { AdminHeader } from '../AdminHeader/AdminHeader';\nimport { Bold } from '../Bold/Bold';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OpeningsToApply() {\n  _s();\n  const navigate = useNavigate();\n  const [openings, setOpenings] = useState({});\n  const [jsonData, setJsonData] = useState(jsdata);\n  const domain = localStorage.getItem(\"domain\");\n\n  // var tempJson;\n  const [tempJson, settempJson] = useState({});\n  const [transformedData, settransformedData] = useState([]);\n  // var transformedData;\n\n  useEffect(() => {\n    fetchCall();\n  }, []);\n  const fetchCall = () => {\n    fetch(`http://${domain}/JobVista/ShowAllUpComingOpeningsServlet`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(async data => {\n      const val = await data;\n\n      // console.log(tempJson);\n      if (val.Status === 'Success') {\n        // setJsonData(data);\n        console.log('suc');\n        // tempJson = data\n        settempJson(val);\n        console.log('in func');\n        mapppu(val);\n        console.log('value', val);\n      }\n    }).catch(error => {\n      console.log('Error fetching data:', error);\n    });\n  };\n\n  // console.log(jsonData)\n\n  const mapppu = tempJson => {\n    let wholeData = tempJson.Value.map(item => ({\n      Department: item.Department.departmentTitle,\n      DepartmentId: item.Department.departmentId,\n      Organization: item.Organization.orgName,\n      OrgId: item.Organization.orgId,\n      salaryRange: item.Opening.salaryRange,\n      qualification: item.Opening.qualification,\n      employmentType: item.Opening.employmentType,\n      endDate: item.Opening.endDate,\n      openingId: item.Organization.orgName,\n      title: item.Opening.description,\n      department: item.Opening.departments,\n      experience: item.Opening.experience,\n      date: item.Opening.startDate\n    }));\n    settransformedData(wholeData);\n  };\n  const handleRowClick = openingId => {\n    const item = transformedData.find(item => item.openingId === openingId);\n    navigate(`/Apply/${item.openingId}`, {\n      state: {\n        item\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: (transformedData != undefined || transformedData != null) && transformedData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        onClick: () => handleRowClick(item.openingId),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Bold, {\n            className: \"cell\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 71\n          }, this), /*#__PURE__*/_jsxDEV(Bold, {\n            className: \"cell\",\n            children: item.Organization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: [\"Department: \", item.department]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: [\"Date: \", item.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: [\"Salary: \", item.salaryRange]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: [\"Qualification: \", item.qualification]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: item.employmentType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, item.openingId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s(OpeningsToApply, \"uzXOq77bzaYh1RTGUNzIzEoovNc=\", false, function () {\n  return [useNavigate];\n});\n_c = OpeningsToApply;\nexport default OpeningsToApply;\nvar _c;\n$RefreshReg$(_c, \"OpeningsToApply\");","map":{"version":3,"names":["React","useState","useEffect","json","useNavigate","jsdata","AdminHeader","Bold","jsxDEV","_jsxDEV","OpeningsToApply","_s","navigate","openings","setOpenings","jsonData","setJsonData","domain","localStorage","getItem","tempJson","settempJson","transformedData","settransformedData","fetchCall","fetch","method","headers","then","resp","data","val","Status","console","log","mapppu","catch","error","wholeData","Value","map","item","Department","departmentTitle","DepartmentId","departmentId","Organization","orgName","OrgId","orgId","salaryRange","Opening","qualification","employmentType","endDate","openingId","title","description","department","departments","experience","date","startDate","handleRowClick","find","state","children","className","fileName","_jsxFileName","lineNumber","columnNumber","undefined","onClick","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/ApplicantPage/Openings.js"],"sourcesContent":["// import React from 'react';\nimport React, { useState, useEffect } from 'react';\n\nimport { json, useNavigate } from 'react-router-dom';\nimport './OpenigsFeild.css';\nimport jsdata from './tempJson.json';\nimport { AdminHeader } from '../AdminHeader/AdminHeader';\nimport { Bold } from '../Bold/Bold';\n\nfunction OpeningsToApply() {\n    const navigate = useNavigate();\n\n    const [openings, setOpenings] = useState({});\n    const [jsonData, setJsonData] = useState(jsdata);\n\n    const domain = localStorage.getItem(\"domain\");\n\n    // var tempJson;\n    const [tempJson, settempJson] = useState({});\n    const [transformedData, settransformedData] = useState([]);\n    // var transformedData;\n\n\n\n\n    useEffect(() => {\n        fetchCall()\n    }, [])\n\n\n    const fetchCall = () => {\n        fetch(`http://${domain}/JobVista/ShowAllUpComingOpeningsServlet`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(resp => resp.json()).then(async data => {\n            const val = await data;\n\n            // console.log(tempJson);\n            if (val.Status === 'Success') {\n                // setJsonData(data);\n                console.log('suc');\n                // tempJson = data\n                settempJson(val)\n                \n                    console.log('in func');\n                   mapppu(val)\n                \n                console.log('value',val);\n            }\n\n        }).catch(error => {\n            console.log('Error fetching data:', error);\n            \n        });\n    }\n\n\n    // console.log(jsonData)\n\n    const mapppu = (tempJson) => {\n        let wholeData = tempJson.Value.map(item => ({\n            Department: item.Department.departmentTitle,\n            DepartmentId: item.Department.departmentId,\n            Organization: item.Organization.orgName,\n            OrgId: item.Organization.orgId,\n            salaryRange: item.Opening.salaryRange,\n            qualification: item.Opening.qualification,\n            employmentType: item.Opening.employmentType,\n            endDate: item.Opening.endDate,\n            openingId: item.Organization.orgName,\n            title: item.Opening.description,\n            department: item.Opening.departments,\n            experience: item.Opening.experience,\n            date: item.Opening.startDate\n        }));\n        settransformedData(wholeData)\n    } \n    \n    const handleRowClick = (openingId) => {\n\n\n        const item = transformedData.find(item => item.openingId === openingId);\n\n\n        navigate(`/Apply/${item.openingId}`, { state: { item } });\n    };\n\n\n    \n\n    return (\n        <div>\n            <AdminHeader className='header' />\n            <div className=\"table\">\n                {/* <div className=\"row header\">\n                    <div className=\"cell\">Organization</div>\n                    <div className=\"cell\">Title</div>\n                    <div className=\"cell\">Department</div>\n                    <div className=\"cell\">Salary Range</div>\n                    <div className=\"cell\">Date</div>\n                    <div className=\"cell\">Qualification</div>\n                    <div className=\"cell\">Employment Type</div>\n                </div> */}\n                {(transformedData != undefined || transformedData != null) && transformedData.map((item) => (\n                    <div className=\"row\" key={item.openingId} onClick={() => handleRowClick(item.openingId)}>\n                        <div></div>\n                        <div>\n                            <Bold className=\"cell\">{item.title}</Bold><br/>\n                            <Bold className=\"cell\">{item.Organization}</Bold>\n                            <div className=\"cell\">Department: {item.department}</div>\n                            <div className=\"cell\">Date: {item.date}</div>\n                        </div>\n                        <div>\n                            <div className=\"cell\">Salary: {item.salaryRange}</div>\n                            <div className=\"cell\">Qualification: {item.qualification}</div>\n                            <div className=\"cell\">{item.employmentType}</div>\n                        </div>\n                        \n                        \n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default OpeningsToApply;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}