{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const [graphResult, setGraphResult] = useState(null);\n  const [label, setLabel] = useState([]);\n  const [datas, setDatas] = useState([]);\n  const data = {\n    labels: label,\n    datasets: [{\n      label: \"My First dataset\",\n      backgroundColor: \"rgb(255, 99, 132)\",\n      borderColor: \"rgb(255, 240, 132)\",\n      data: datas\n    }]\n  };\n  const fetchCallForGraphs = () => {\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      console.log(\"Fetched data:\", result);\n      setGraphResult(result);\n      console.log(graphResult);\n      setLabel(graphResult.selectedApplicantsGraphInDepartments);\n      console.log(label);\n      setDatas(graphResult.selectedApplicantsGraphInDepartments[0][0]);\n      console.log(datas);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChart, \"ZMtJjAM4HM062njbnKBism8imG4=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","Chart","Pie","jsxDEV","_jsxDEV","LineChart","_s","graphResult","setGraphResult","label","setLabel","datas","setDatas","data","labels","datasets","backgroundColor","borderColor","fetchCallForGraphs","fetch","method","headers","then","response","ok","Error","status","json","result","console","log","selectedApplicantsGraphInDepartments","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["import React, { useState } from \"react\"; \nimport Chart from \"chart.js/auto\"; \nimport { Pie } from \"react-chartjs-2\"; \n\n\n\nconst LineChart = () => {\n    const [graphResult , setGraphResult] = useState(null);\n    const [label, setLabel] = useState([]);\n  const [datas, setDatas] = useState([]);   \n    const data = {\n        labels: label,\n        datasets: [\n          {\n            label: \"My First dataset\", \n            backgroundColor: \"rgb(255, 99, 132)\", \n            borderColor: \"rgb(255, 240, 132)\", \n            data: datas, \n          },\n        ],\n      };\n\nconst fetchCallForGraphs = () => {\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(result => {\n        console.log(\"Fetched data:\", result);\n        setGraphResult(result);\n        console.log(graphResult);\n        setLabel(graphResult.selectedApplicantsGraphInDepartments);\n        console.log(label);\n        setDatas(graphResult.selectedApplicantsGraphInDepartments[0][0]);\n        console.log(datas);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }\n  return (\n    <div>\n      <Pie data={data} /> \n    </div>\n  );\n};\n\nexport default LineChart; \n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAGC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACrD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMa,IAAI,GAAG;IACTC,MAAM,EAAEL,KAAK;IACbM,QAAQ,EAAE,CACR;MACEN,KAAK,EAAE,kBAAkB;MACzBO,eAAe,EAAE,mBAAmB;MACpCC,WAAW,EAAE,oBAAoB;MACjCJ,IAAI,EAAEF;IACR,CAAC;EAEL,CAAC;EAEP,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;IAC7BC,KAAK,CAAC,uCAAuC,EAAE;MAC7CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;MAC3D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAACM,MAAM,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAAC;MACpCpB,cAAc,CAACoB,MAAM,CAAC;MACtBC,OAAO,CAACC,GAAG,CAACvB,WAAW,CAAC;MACxBG,QAAQ,CAACH,WAAW,CAACwB,oCAAoC,CAAC;MAC1DF,OAAO,CAACC,GAAG,CAACrB,KAAK,CAAC;MAClBG,QAAQ,CAACL,WAAW,CAACwB,oCAAoC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChEF,OAAO,CAACC,GAAG,CAACnB,KAAK,CAAC;IACpB,CAAC,CAAC,CACDqB,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EACD,oBACE7B,OAAA;IAAA8B,QAAA,eACE9B,OAAA,CAACF,GAAG;MAACW,IAAI,EAAEA;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAAChC,EAAA,CA/CID,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}