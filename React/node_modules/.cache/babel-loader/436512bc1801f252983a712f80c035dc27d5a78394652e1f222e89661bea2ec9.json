{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // Importing the React library\n\nimport Chart from \"chart.js/auto\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Graphs = () => {\n  _s();\n  const [label, setLabel] = useState(null);\n  const fetchCallForGraphs = () => {\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      console.log(\"Fetched data:\", result);\n      setLabel(result);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n\n  // Setting up the data for the chart, including the labels and datasets\n  const data = {\n    labels: label,\n    datasets: [{\n      label: \"My First dataset\",\n      // Setting up the label for the dataset\n      backgroundColor: \"rgb(255, 99, 132)\",\n      // Setting up the background color for the dataset\n      borderColor: \"rgb(255, 240, 132)\",\n      // Setting up the border color for the dataset\n      data: [0, 10, 5, 2, 20, 30, 45] // Setting up the data for the dataset\n    }]\n  };\n  const LineChart = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this);\n  };\n};\n_s(Graphs, \"Ppo0LF+kHPlv1SP52BlgX7bgG28=\");\n_c = Graphs;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"Graphs\");","map":{"version":3,"names":["React","useState","Chart","Pie","jsxDEV","_jsxDEV","Graphs","_s","label","setLabel","fetchCallForGraphs","fetch","method","headers","then","response","ok","Error","status","json","result","console","log","catch","error","data","labels","datasets","backgroundColor","borderColor","LineChart","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["import React, { useState } from \"react\"; // Importing the React library\n\nimport Chart from \"chart.js/auto\"; \n\nimport { Pie } from \"react-chartjs-2\"; \n\nexport const Graphs = () => {\n\nconst [label , setLabel] = useState(null);\n\nconst fetchCallForGraphs = () => {\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(result => {\n        console.log(\"Fetched data:\", result);\n        setLabel(result);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }\n\n\n\n// Setting up the data for the chart, including the labels and datasets\nconst data = {\n  labels: label,\n  datasets: [\n    {\n      label: \"My First dataset\", // Setting up the label for the dataset\n      backgroundColor: \"rgb(255, 99, 132)\", // Setting up the background color for the dataset\n      borderColor: \"rgb(255, 240, 132)\", // Setting up the border color for the dataset\n      data: [0, 10, 5, 2, 20, 30, 45], // Setting up the data for the dataset\n    },\n  ],\n};\n\n\nconst LineChart = () => {\n  return (\n    <div>\n      <Pie data={data} /> \n    </div>\n  );\n};\n};\nexport default LineChart; \n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;;AAEzC,OAAOC,KAAK,MAAM,eAAe;AAEjC,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE5B,MAAM,CAACC,KAAK,EAAGC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEzC,MAAMS,kBAAkB,GAAGA,CAAA,KAAM;IAC7BC,KAAK,CAAC,uCAAuC,EAAE;MAC7CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;MAC3D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAACM,MAAM,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAAC;MACpCX,QAAQ,CAACW,MAAM,CAAC;IAClB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;;EAIH;EACA,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAElB,KAAK;IACbmB,QAAQ,EAAE,CACR;MACEnB,KAAK,EAAE,kBAAkB;MAAE;MAC3BoB,eAAe,EAAE,mBAAmB;MAAE;MACtCC,WAAW,EAAE,oBAAoB;MAAE;MACnCJ,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAE;IACnC,CAAC;EAEL,CAAC;EAGD,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtB,oBACEzB,OAAA;MAAA0B,QAAA,eACE1B,OAAA,CAACF,GAAG;QAACsB,IAAI,EAAEA;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAEV,CAAC;AACD,CAAC;AAAC5B,EAAA,CAjDWD,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AAkDnB,eAAewB,SAAS;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}