{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Style from '../BarChart/Bar.module.css';\n\n// box-sizing: border-box;\n// display: block;\n// height: 318px;\n// width: 754px;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const [label, setLabel] = useState([\"Finance\"]);\n  const [datavalue, setdatavalue] = useState([\"\"]);\n  const styles = {\n    boxSizing: 'border-box',\n    display: 'block',\n    height: '318px',\n    width: '754px'\n  };\n  const fetchData = () => {\n    fetch(\"http://localhost:8080/JobVista/Graphs\", {\n      method: 'GET',\n      headers: {\n        'Content-type': 'Application/JSON'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      const selectedApplicantsGraphInDepartments = result.selectedApplicantsGraphInDepartments;\n      console.log(selectedApplicantsGraphInDepartments);\n      console.log(Object.keys(selectedApplicantsGraphInDepartments).length);\n      if (Object.keys(selectedApplicantsGraphInDepartments).length > 0) {\n        const getkeys = Object.entries(selectedApplicantsGraphInDepartments).map(([key, _]) => key);\n        const getvalues = Object.entries(selectedApplicantsGraphInDepartments).map(([_, value]) => value);\n        setLabel(getkeys);\n        setdatavalue(getvalues);\n        console.log(\"label1:\", label);\n        console.log(\"datas1:\", datavalue);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log(\"label:\", label);\n    console.log(\"dataSeting:\", datavalue);\n  }, [label, datavalue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: Style.chartId,\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: {\n        labels: label,\n        datasets: [{\n          label: \"Total Hire\",\n          data: datavalue,\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        circumference: 180,\n        rotation: Math.PI\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(LineChart, \"pmWYYNxVg+V6SBKCHDHtlHVq+3w=\");\n_c = LineChart;\nexport default LineChart;\n\n// import React, { useState, useEffect } from 'react';\n// import { Doughnut } from 'react-chartjs-2';\n\n// const data = {\n//     labels: ['IT', 'Finance', 'Engineering'],\n//     datasets: [{\n//         data: [1, 2, 5],\n//         backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n//         borderColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n//         borderWidth: 1,\n//     }],\n// };\n\n// const HalfCirclePieChart = ({ data }) => {\n//     const [chartData, setChartData] = useState(data);\n\n//     useEffect(() => {\n//         setChartData(data);\n//     }, [data]);\n\n//     const halfCircleOptions = {\n//         maintainAspectRatio: false,\n//         rotation: 1 * Math.PI,\n//         circumference: 1 * Math.PI,\n//     };\n//     HalfCirclePieChart(data);\n\n//     return (\n//         <div>\n//             <Doughnut data={chartData} options={halfCircleOptions} />\n//         </div>\n//     );\n// };\n\n// export default HalfCirclePieChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","Doughnut","Style","jsxDEV","_jsxDEV","LineChart","_s","label","setLabel","datavalue","setdatavalue","styles","boxSizing","display","height","width","fetchData","fetch","method","headers","then","response","ok","Error","status","json","result","selectedApplicantsGraphInDepartments","console","log","Object","keys","length","getkeys","entries","map","key","_","getvalues","value","catch","error","id","chartId","children","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","circumference","rotation","Math","PI","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/BarChart/Chart.js"],"sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Style from '../BarChart/Bar.module.css';\n\n\n\n// box-sizing: border-box;\n// display: block;\n// height: 318px;\n// width: 754px;\n\n\nconst LineChart = () => {\n    const [label, setLabel] = useState([\"Finance\"]);\n    const [datavalue, setdatavalue] = useState([\"\"]);\n    const styles = {\n        boxSizing: 'border-box',\n        display: 'block',\n        height: '318px',\n        width: '754px',\n      };\n    const fetchData = () => {\n        fetch(\"http://localhost:8080/JobVista/Graphs\", {\n            method: 'GET',\n            headers: {\n                'Content-type': 'Application/JSON'\n            }\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(result => {\n                const selectedApplicantsGraphInDepartments = result.selectedApplicantsGraphInDepartments;\n                console.log(selectedApplicantsGraphInDepartments);\n                console.log(Object.keys(selectedApplicantsGraphInDepartments).length);\n                \n\n                if ((Object.keys(selectedApplicantsGraphInDepartments)).length > 0) {\n                    const getkeys = Object.entries(selectedApplicantsGraphInDepartments).map(([key, _]) => key);\n                    const getvalues = Object.entries(selectedApplicantsGraphInDepartments).map(([_, value]) => value);\n                    setLabel(getkeys);\n                    setdatavalue(getvalues);\n                    console.log(\"label1:\", label);\n                    console.log(\"datas1:\", datavalue);\n                }\n\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n            });\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        console.log(\"label:\", label);\n        console.log(\"dataSeting:\", datavalue);\n    }, [label, datavalue]);\n\n    return (\n        <div id={Style.chartId} >\n            <Doughnut data={{\n                    labels: label,\n                    datasets: [{\n                        label: \"Total Hire\",\n                        data: datavalue,\n                        backgroundColor: [\n                            \"rgba(255, 99, 132, 0.2)\",\n                            \"rgba(54, 162, 235, 0.2)\",\n                            \"rgba(255, 206, 86, 0.2)\",\n                            \"rgba(75, 192, 192, 0.2)\",\n                            \"rgba(153, 102, 255, 0.2)\",\n                            \"rgba(255, 159, 64, 0.2)\"\n                        ],\n                        borderColor: [\n                            \"rgba(255, 99, 132, 1)\",\n                            \"rgba(54, 162, 235, 1)\",\n                            \"rgba(255, 206, 86, 1)\",\n                            \"rgba(75, 192, 192, 1)\",\n                            \"rgba(153, 102, 255, 1)\",\n                            \"rgba(255, 159, 64, 1)\"\n                        ],\n                        borderWidth: 1\n                    }]\n                }}\n                options={{\n                    circumference: 180,\n                    rotation: Math.PI\n                }}\n/>\n        </div>\n    );\n};\n\nexport default LineChart;\n\n// import React, { useState, useEffect } from 'react';\n// import { Doughnut } from 'react-chartjs-2';\n\n// const data = {\n//     labels: ['IT', 'Finance', 'Engineering'],\n//     datasets: [{\n//         data: [1, 2, 5],\n//         backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n//         borderColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n//         borderWidth: 1,\n//     }],\n// };\n\n\n// const HalfCirclePieChart = ({ data }) => {\n//     const [chartData, setChartData] = useState(data);\n   \n//     useEffect(() => {\n//         setChartData(data);\n//     }, [data]);\n\n//     const halfCircleOptions = {\n//         maintainAspectRatio: false,\n//         rotation: 1 * Math.PI,\n//         circumference: 1 * Math.PI,\n//     };\n//     HalfCirclePieChart(data);\n\n//     return (\n//         <div>\n//             <Doughnut data={chartData} options={halfCircleOptions} />\n//         </div>\n//     );\n// };\n\n// export default HalfCirclePieChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}