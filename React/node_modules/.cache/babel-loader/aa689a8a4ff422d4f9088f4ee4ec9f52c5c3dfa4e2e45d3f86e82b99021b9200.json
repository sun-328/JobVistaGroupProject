{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { AdminHeader } from '../AdminHeader/AdminHeader';\n// import Style from '../PanelistPage/PanelistPage.module.css';\n// import { Text } from '../Text/Text';\n// import data from './Panelist.json';\n// import { Heading } from '../Heading/Heading';\n// import { Button } from '../Button/Button';\n// import { TodayOpenings } from '../TodayOpenings/TodayOpening';\n\n// export const PanelistPage = () => {\n//     const [openings, setOpenings] = useState(data);\n//     const [resultData, setResultData] = useState(data);\n//     const [openingindex, setopeningIndex] = useState(0);\n//     const [openingView, setOpeningView] = useState(false);\n//     const [applicantView, setApplicantView] = useState(false);\n//     const [panelistView, setPanelistView] = useState(false);\n//     const [panelistDetails, setpanelistDetails] = useState({\n//         panelistName: '',\n//         panelistEmail: '',\n//         panelistPositionpanelistGender: '',\n//         panelistPosition: ''\n\n//     });\n//     // const [panelistPosition, setPanelistPosition] = useState('');\n//     // const [panelistEmail, setPanelistEmail] = useState('');\n\n//     const fetchData = () => {\n//         fetch('http://localhost:8080/JobVista/PanelistOpeningServlet', {\n//             method: 'GET',\n//             headers: {\n//                 'Content-type': 'application/json'\n//             }\n//         })\n//             .then((response) => {\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error status: ${response.status}`)\n//                 }\n//                 return response.json();\n//             })\n//             .then((result) => {\n//                 // console.log(result.Value[0].Applicants);\n//                 setOpenings(result.Value.openings);\n//                 setResultData(result.Value);\n//             })\n//             .catch((error) => {\n//                 console.log(\"Error in get openings \", error);\n//             })\n//     }\n\n//     useEffect(() => {\n//         fetchData();\n//     }, [])\n\n//     const openingview = (name, position, email, gender) => {\n//         setOpeningView(true);\n//         setPanelistView(true);\n//         panelistDetails.panelistName = name;\n//         panelistDetails.panelistEmail = email;\n//         panelistDetails.panelistGender = gender;\n//         panelistDetails.panelistPosition = position;\n//     }\n\n//     const viewApplicant = () => {\n//         setApplicantView(true);\n//         setOpeningView(true);\n//         setPanelistView(false);\n//     }\n\n//     const backBtn = () => {\n//         setOpeningView(false);\n//     }\n\n//     const currDate = new Date();\n//     const year = currDate.getFullYear();\n//     const month = currDate.getMonth() < 10 ? '0' + (currDate.getMonth() + 1) : currDate.getMonth() + 1;\n//     const date = currDate.getDate() < 10 ? '0' + (currDate.getDate()) : currDate.getDate();\n\n//     return (\n//         <div id={Style.mainContainer} className={Style.commonStyle}>\n//             <AdminHeader />\n\n//             <div id={Style.mainSide} className={Style.commonStyle}>\n//                 <div id={Style.leftSide} className={Style.commonStyle}>\n\n//                     <div id={Style.opening}>\n//                         <TodayOpenings />\n//                     </div>\n//                 </div>\n\n//                 {!openingView ? (\n//                     <div id={Style.view}>\n//                         {openings.length === 0 ? (\n//                             <Text>No Openings Available</Text>\n//                         ) : (\n//                             <table>\n//                                 <thead>\n//                                     <tr className={Style.trId}>\n//                                         <th className={Style.thId}>Opening</th>\n//                                         <th className={Style.thId}>Test</th>\n//                                         <th className={Style.thId}>Date</th>\n//                                         <th className={Style.thId}>Applicants</th>\n//                                     </tr>\n//                                 </thead>\n//                                 <tbody className={Style.tbodyId}>\n//                                     {openings.map((opening, openingIndex) => {\n//                                         if (opening && opening.startDate) {\n//                                             const startingDate = new Date(opening.startDate);\n//                                             if (startingDate >= currDate) {\n//                                                 return (\n//                                                     <tr className={Style.trId} key={openingIndex}>\n//                                                         <td className={Style.tdId} onClick={() => openingview(opening.Panelist.panelistName, opening.Panelist.panelistPosition, opening.Panelist.panelistEmail, opening.Panelist.panelistGender)}>{opening.description}</td>\n//                                                         {opening.test && opening.test.length > 0 ? (\n//                                                             <React.Fragment>\n//                                                                 <td className={Style.tdId} onClick={() => openingview(opening.Panelist.panelistName, opening.Panelist.panelistPosition, opening.Panelist.panelistEmail, opening.Panelist.panelistGender)}>{opening.test[0].testTitle}</td>\n//                                                                 <td className={Style.tdId} onClick={() => openingview(opening.Panelist.panelistName, opening.Panelist.panelistPosition, opening.Panelist.panelistEmail, opening.Panelist.panelistGender)}>{opening.test[0].testDate}</td>\n//                                                                 <td className={Style.tdId}><Button id={Style.buttonId} onClick={() => { viewApplicant(); setopeningIndex(openingIndex);  }}>View Applicants</Button></td>\n\n//                                                             </React.Fragment>\n//                                                         ) : (\n//                                                             <React.Fragment>\n//                                                                 <td>-</td>\n//                                                                 <td>-</td>\n//                                                                 <td>-</td>\n//                                                             </React.Fragment>\n//                                                         )}\n//                                                     </tr>\n//                                                 )\n//                                             } else {\n//                                                 return null;\n//                                             }\n//                                         } else {\n//                                             return null;\n//                                         }\n//                                     })}\n//                                 </tbody>\n//                             </table>\n//                         )}\n\n//                         <div id={Style.analytics} className={Style.common}>\n//                             <Heading className={Style.title}>Analytics View</Heading>\n//                         </div>\n//                     </div>\n//                 ) : panelistView && openingView ? (\n//                     <div id={Style.rightSide} className={Style.commonStyle}>\n//                         <div id={Style.todayOpenings} className={Style.common}>\n//                             <Button onClick={backBtn} id={Style.backBtn}><i class=\"fa-solid fa-chevron-left\"></i></Button>\n//                             <table>\n//                                 <tr>\n//                                     <th>Panelist Name</th>\n//                                     <th>Panelist Position</th>\n//                                     <th>Panelist Email</th>\n//                                     <th>Panelist Gender</th>\n//                                 </tr>\n//                                 <tr>\n//                                     <td>{panelistDetails.panelistName}</td>\n//                                     <td>{panelistDetails.panelistPosition}</td>\n//                                     <td>{panelistDetails.panelistEmail}</td>\n//                                     <td>{panelistDetails.panelistGender}</td>\n//                                 </tr>\n//                             </table>\n//                         </div>\n//                     </div>\n//                 ) : applicantView && openingView ? (\n//                     <div id={Style.rightSide} className={Style.commonStyle}>\n//                         <div id={Style.todayOpenings} className={Style.common}>\n//                             <Button onClick={backBtn} id={Style.backBtn}><i class=\"fa-solid fa-chevron-left\"></i></Button>\n//                             <table id={Style.table}>\n//                                 <thead>\n//                                     <tr className={Style.applicantTr}>\n//                                         <th>Name</th>\n//                                         <th>Email</th>\n//                                         <th className={Style.jobSeekerGender}>Gender</th>\n//                                         <th>DOB</th>\n//                                         <th>Qualification</th>\n//                                         <th className={Style.phone}>Phone</th>\n//                                         <th className={Style.experience}>Experience</th>\n//                                     </tr>\n//                                 </thead>\n//                                 <tbody>\n//                                     {openings[openingindex].applicants[0] && openings[openingindex].applicants[0].length > 0 &&\n//                                     openings[openingindex].applicants[0].map((applicant, index) => (\n//                                         <tr key={index} className={Style.applicantTr}>\n//                                             <td className={Style.jobSeekerName}>{applicant.jobSeekerName}</td> \n//                                             <td>{applicant.jobSeekerEmail}</td>\n//                                             <td className={Style.jobSeekerGender}>{applicant.jobSeekerGender}</td>\n//                                             <td className={Style.jobSeekerDOB}>{applicant.jobSeekerDOB}</td>\n//                                             <td className={Style.jobSeekerQualification}>{applicant.jobSeekerQualification}</td>\n//                                             <td className={Style.phone}>{applicant.jobSeekerPhone}</td>\n//                                             <td className={Style.experience}>{applicant.jobSeekerExperience}</td>\n//                                         </tr>\n//                                     ))}\n//                                 </tbody>\n//                             </table>\n//                         </div>\n//                     </div>\n//                 ) : null}\n//             </div>\n//         </div>\n//     )\n\n// }","map":{"version":3,"names":[],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/PanelistPage/PanelistPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { AdminHeader } from '../AdminHeader/AdminHeader';\n// import Style from '../PanelistPage/PanelistPage.module.css';\n// import { Text } from '../Text/Text';\n// import data from './Panelist.json';\n// import { Heading } from '../Heading/Heading';\n// import { Button } from '../Button/Button';\n// import { TodayOpenings } from '../TodayOpenings/TodayOpening';\n\n// export const PanelistPage = () => {\n//     const [openings, setOpenings] = useState(data);\n//     const [resultData, setResultData] = useState(data);\n//     const [openingindex, setopeningIndex] = useState(0);\n//     const [openingView, setOpeningView] = useState(false);\n//     const [applicantView, setApplicantView] = useState(false);\n//     const [panelistView, setPanelistView] = useState(false);\n//     const [panelistDetails, setpanelistDetails] = useState({\n//         panelistName: '',\n//         panelistEmail: '',\n//         panelistPositionpanelistGender: '',\n//         panelistPosition: ''\n\n//     });\n//     // const [panelistPosition, setPanelistPosition] = useState('');\n//     // const [panelistEmail, setPanelistEmail] = useState('');\n\n//     const fetchData = () => {\n//         fetch('http://localhost:8080/JobVista/PanelistOpeningServlet', {\n//             method: 'GET',\n//             headers: {\n//                 'Content-type': 'application/json'\n//             }\n//         })\n//             .then((response) => {\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error status: ${response.status}`)\n//                 }\n//                 return response.json();\n//             })\n//             .then((result) => {\n//                 // console.log(result.Value[0].Applicants);\n//                 setOpenings(result.Value.openings);\n//                 setResultData(result.Value);\n//             })\n//             .catch((error) => {\n//                 console.log(\"Error in get openings \", error);\n//             })\n//     }\n\n//     useEffect(() => {\n//         fetchData();\n//     }, [])\n\n\n//     const openingview = (name, position, email, gender) => {\n//         setOpeningView(true);\n//         setPanelistView(true);\n//         panelistDetails.panelistName = name;\n//         panelistDetails.panelistEmail = email;\n//         panelistDetails.panelistGender = gender;\n//         panelistDetails.panelistPosition = position;\n//     }\n\n    \n\n//     const viewApplicant = () => {\n//         setApplicantView(true);\n//         setOpeningView(true);\n//         setPanelistView(false);\n//     }\n\n\n//     const backBtn = () => {\n//         setOpeningView(false);\n//     }\n\n//     const currDate = new Date();\n//     const year = currDate.getFullYear();\n//     const month = currDate.getMonth() < 10 ? '0' + (currDate.getMonth() + 1) : currDate.getMonth() + 1;\n//     const date = currDate.getDate() < 10 ? '0' + (currDate.getDate()) : currDate.getDate();\n\n\n//     return (\n//         <div id={Style.mainContainer} className={Style.commonStyle}>\n//             <AdminHeader />\n    \n//             <div id={Style.mainSide} className={Style.commonStyle}>\n//                 <div id={Style.leftSide} className={Style.commonStyle}>\n    \n//                     <div id={Style.opening}>\n//                         <TodayOpenings />\n//                     </div>\n//                 </div>\n    \n//                 {!openingView ? (\n//                     <div id={Style.view}>\n//                         {openings.length === 0 ? (\n//                             <Text>No Openings Available</Text>\n//                         ) : (\n//                             <table>\n//                                 <thead>\n//                                     <tr className={Style.trId}>\n//                                         <th className={Style.thId}>Opening</th>\n//                                         <th className={Style.thId}>Test</th>\n//                                         <th className={Style.thId}>Date</th>\n//                                         <th className={Style.thId}>Applicants</th>\n//                                     </tr>\n//                                 </thead>\n//                                 <tbody className={Style.tbodyId}>\n//                                     {openings.map((opening, openingIndex) => {\n//                                         if (opening && opening.startDate) {\n//                                             const startingDate = new Date(opening.startDate);\n//                                             if (startingDate >= currDate) {\n//                                                 return (\n//                                                     <tr className={Style.trId} key={openingIndex}>\n//                                                         <td className={Style.tdId} onClick={() => openingview(opening.Panelist.panelistName, opening.Panelist.panelistPosition, opening.Panelist.panelistEmail, opening.Panelist.panelistGender)}>{opening.description}</td>\n//                                                         {opening.test && opening.test.length > 0 ? (\n//                                                             <React.Fragment>\n//                                                                 <td className={Style.tdId} onClick={() => openingview(opening.Panelist.panelistName, opening.Panelist.panelistPosition, opening.Panelist.panelistEmail, opening.Panelist.panelistGender)}>{opening.test[0].testTitle}</td>\n//                                                                 <td className={Style.tdId} onClick={() => openingview(opening.Panelist.panelistName, opening.Panelist.panelistPosition, opening.Panelist.panelistEmail, opening.Panelist.panelistGender)}>{opening.test[0].testDate}</td>\n//                                                                 <td className={Style.tdId}><Button id={Style.buttonId} onClick={() => { viewApplicant(); setopeningIndex(openingIndex);  }}>View Applicants</Button></td>\n                                                                \n//                                                             </React.Fragment>\n//                                                         ) : (\n//                                                             <React.Fragment>\n//                                                                 <td>-</td>\n//                                                                 <td>-</td>\n//                                                                 <td>-</td>\n//                                                             </React.Fragment>\n//                                                         )}\n//                                                     </tr>\n//                                                 )\n//                                             } else {\n//                                                 return null;\n//                                             }\n//                                         } else {\n//                                             return null;\n//                                         }\n//                                     })}\n//                                 </tbody>\n//                             </table>\n//                         )}\n    \n//                         <div id={Style.analytics} className={Style.common}>\n//                             <Heading className={Style.title}>Analytics View</Heading>\n//                         </div>\n//                     </div>\n//                 ) : panelistView && openingView ? (\n//                     <div id={Style.rightSide} className={Style.commonStyle}>\n//                         <div id={Style.todayOpenings} className={Style.common}>\n//                             <Button onClick={backBtn} id={Style.backBtn}><i class=\"fa-solid fa-chevron-left\"></i></Button>\n//                             <table>\n//                                 <tr>\n//                                     <th>Panelist Name</th>\n//                                     <th>Panelist Position</th>\n//                                     <th>Panelist Email</th>\n//                                     <th>Panelist Gender</th>\n//                                 </tr>\n//                                 <tr>\n//                                     <td>{panelistDetails.panelistName}</td>\n//                                     <td>{panelistDetails.panelistPosition}</td>\n//                                     <td>{panelistDetails.panelistEmail}</td>\n//                                     <td>{panelistDetails.panelistGender}</td>\n//                                 </tr>\n//                             </table>\n//                         </div>\n//                     </div>\n//                 ) : applicantView && openingView ? (\n//                     <div id={Style.rightSide} className={Style.commonStyle}>\n//                         <div id={Style.todayOpenings} className={Style.common}>\n//                             <Button onClick={backBtn} id={Style.backBtn}><i class=\"fa-solid fa-chevron-left\"></i></Button>\n//                             <table id={Style.table}>\n//                                 <thead>\n//                                     <tr className={Style.applicantTr}>\n//                                         <th>Name</th>\n//                                         <th>Email</th>\n//                                         <th className={Style.jobSeekerGender}>Gender</th>\n//                                         <th>DOB</th>\n//                                         <th>Qualification</th>\n//                                         <th className={Style.phone}>Phone</th>\n//                                         <th className={Style.experience}>Experience</th>\n//                                     </tr>\n//                                 </thead>\n//                                 <tbody>\n//                                     {openings[openingindex].applicants[0] && openings[openingindex].applicants[0].length > 0 &&\n//                                     openings[openingindex].applicants[0].map((applicant, index) => (\n//                                         <tr key={index} className={Style.applicantTr}>\n//                                             <td className={Style.jobSeekerName}>{applicant.jobSeekerName}</td> \n//                                             <td>{applicant.jobSeekerEmail}</td>\n//                                             <td className={Style.jobSeekerGender}>{applicant.jobSeekerGender}</td>\n//                                             <td className={Style.jobSeekerDOB}>{applicant.jobSeekerDOB}</td>\n//                                             <td className={Style.jobSeekerQualification}>{applicant.jobSeekerQualification}</td>\n//                                             <td className={Style.phone}>{applicant.jobSeekerPhone}</td>\n//                                             <td className={Style.experience}>{applicant.jobSeekerExperience}</td>\n//                                         </tr>\n//                                     ))}\n//                                 </tbody>\n//                             </table>\n//                         </div>\n//                     </div>\n//                 ) : null}\n//             </div>\n//         </div>\n//     )\n    \n// }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}