{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/Openings/CurrentOpenings.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Style from '../Openings/Openings.module.css';\nimport { Text } from '../Text/Text';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentOpenings = () => {\n  _s();\n  const [openingsJson, setOpeningsJson] = useState([]);\n  useEffect(() => {\n    fetchCallForOpenings();\n  }, []);\n  const domain = localStorage.getItem(\"domain\");\n  const fetchCallForOpenings = () => {\n    fetch(`http://${domain}/JobVista/GetCurrentOpenings`, {\n      method: 'POST',\n      // credentials: 'include',\n      headers: {\n        'Content-type': 'Application/JSON'\n      },\n      body: JSON.stringify({\n        'userDetails': JSON.parse(localStorage.getItem('userDetails'))\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      setOpeningsJson(result.message);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: Style.divId,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: Style.applicants,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        id: Style.currentOpeningId,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            id: Style.tr_tab,\n            className: Style.openingTrMain,\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              id: Style.name,\n              children: \"Opening Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              id: Style.start_date,\n              children: \"Start_Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          id: Style.tbody,\n          children: openingsJson.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"No Openings Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this) : openingsJson.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            id: index === 0 ? Style.some : Style.other,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: Style.td,\n              children: item.Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: Style.td,\n              children: item.Start_Date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentOpenings, \"wJlFIU1BJG2R7nSWoAAZb6P4y5w=\");\n_c = CurrentOpenings;\nexport default CurrentOpenings;\nvar _c;\n$RefreshReg$(_c, \"CurrentOpenings\");","map":{"version":3,"names":["React","useEffect","useState","Style","Text","jsxDEV","_jsxDEV","CurrentOpenings","_s","openingsJson","setOpeningsJson","fetchCallForOpenings","domain","localStorage","getItem","fetch","method","headers","body","JSON","stringify","parse","then","response","ok","Error","status","json","result","message","catch","error","console","id","divId","children","applicants","currentOpeningId","tr_tab","className","openingTrMain","name","fileName","_jsxFileName","lineNumber","columnNumber","start_date","tbody","length","map","item","index","some","other","td","Description","Start_Date","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/Openings/CurrentOpenings.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Style from '../Openings/Openings.module.css';\nimport { Text } from '../Text/Text';\n\nconst CurrentOpenings = () => {\n  const [openingsJson, setOpeningsJson] = useState([]);\n\n  useEffect(() => {\n    fetchCallForOpenings();\n  }, []);\n  const domain = localStorage.getItem(\"domain\");\n  const fetchCallForOpenings = () => {\n    fetch(`http://${domain}/JobVista/GetCurrentOpenings`, {\n      method: 'POST',\n      // credentials: 'include',\n      headers: {\n        'Content-type': 'Application/JSON'\n      },\n      body: JSON.stringify({ 'userDetails': JSON.parse(localStorage.getItem('userDetails')) })\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(result => {\n        setOpeningsJson(result.message);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }\n\n \n\n  return (\n    <div id={Style.divId}>\n\n\n      <div id={Style.applicants}>\n\n        <table id={Style.currentOpeningId}>\n          <thead>\n            <tr id={Style.tr_tab} className={Style.openingTrMain}>\n              <th id={Style.name}>Opening Name</th>\n              <th id={Style.start_date}>Start_Date</th>\n            </tr>\n          </thead>\n          <tbody id={Style.tbody}>\n            {openingsJson.length === 0 ?\n            <tr>\n              <td>No Openings Available</td>\n            </tr>\n              :\n              (openingsJson.map((item, index) => (\n                <tr key={index} id={index === 0 ? Style.some : Style.other}>\n                  <td className={Style.td}>{item.Description}</td>\n                  <td className={Style.td}>{item.Start_Date}</td>\n                </tr>\n              )))}\n          </tbody>\n\n        </table>\n      </div>\n\n    </div>\n  )\n}\n\nexport default CurrentOpenings;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,iCAAiC;AACnD,SAASC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACdU,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC7C,MAAMH,oBAAoB,GAAGA,CAAA,KAAM;IACjCI,KAAK,CAAE,UAASH,MAAO,8BAA6B,EAAE;MACpDI,MAAM,EAAE,MAAM;MACd;MACAC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,aAAa,EAAED,IAAI,CAACE,KAAK,CAACR,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAAE,CAAC;IACzF,CAAC,CAAC,CACCQ,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;MAC3D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAACM,MAAM,IAAI;MACdlB,eAAe,CAACkB,MAAM,CAACC,OAAO,CAAC;IACjC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EAID,oBACEzB,OAAA;IAAK2B,EAAE,EAAE9B,KAAK,CAAC+B,KAAM;IAAAC,QAAA,eAGnB7B,OAAA;MAAK2B,EAAE,EAAE9B,KAAK,CAACiC,UAAW;MAAAD,QAAA,eAExB7B,OAAA;QAAO2B,EAAE,EAAE9B,KAAK,CAACkC,gBAAiB;QAAAF,QAAA,gBAChC7B,OAAA;UAAA6B,QAAA,eACE7B,OAAA;YAAI2B,EAAE,EAAE9B,KAAK,CAACmC,MAAO;YAACC,SAAS,EAAEpC,KAAK,CAACqC,aAAc;YAAAL,QAAA,gBACnD7B,OAAA;cAAI2B,EAAE,EAAE9B,KAAK,CAACsC,IAAK;cAAAN,QAAA,EAAC;YAAY;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrCvC,OAAA;cAAI2B,EAAE,EAAE9B,KAAK,CAAC2C,UAAW;cAAAX,QAAA,EAAC;YAAU;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRvC,OAAA;UAAO2B,EAAE,EAAE9B,KAAK,CAAC4C,KAAM;UAAAZ,QAAA,EACpB1B,YAAY,CAACuC,MAAM,KAAK,CAAC,gBAC1B1C,OAAA;YAAA6B,QAAA,eACE7B,OAAA;cAAA6B,QAAA,EAAI;YAAqB;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,GAEFpC,YAAY,CAACwC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC5B7C,OAAA;YAAgB2B,EAAE,EAAEkB,KAAK,KAAK,CAAC,GAAGhD,KAAK,CAACiD,IAAI,GAAGjD,KAAK,CAACkD,KAAM;YAAAlB,QAAA,gBACzD7B,OAAA;cAAIiC,SAAS,EAAEpC,KAAK,CAACmD,EAAG;cAAAnB,QAAA,EAAEe,IAAI,CAACK;YAAW;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChDvC,OAAA;cAAIiC,SAAS,EAAEpC,KAAK,CAACmD,EAAG;cAAAnB,QAAA,EAAEe,IAAI,CAACM;YAAU;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAFxCM,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACL;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAArC,EAAA,CAhEKD,eAAe;AAAAkD,EAAA,GAAflD,eAAe;AAkErB,eAAeA,eAAe;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}