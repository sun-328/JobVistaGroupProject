{"ast":null,"code":"var _jsxFileName = \"/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/PanelistPage/ApplicantText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Text } from \"../Text/Text\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PanelistTextPrint = () => {\n  _s();\n  const [totalOpeningsJson, setTotalOpeningsJson] = useState({\n    \"totalOpenings\": '',\n    \"totalApplicants\": '',\n    \"selectedApplicants\": ''\n  });\n  // const [totalApplicants, setTotalApplicants] = useState(null);\n  // const [selectedApplicants, setSelectedApplicants] = useState(null);\n\n  // const result = {\"totalOpenings\":6,\"totalApplicants\":22,\"selectedApplicants\":8};\n\n  totalOpeningsJson.totalOpenings = result.totalOpenings;\n  totalOpeningsJson.totalApplicants = result.totalApplicants;\n  totalOpeningsJson.selectedApplicants = result.selectedApplicants;\n  // setTotalApplicants(result.totalApplicants);\n  // setSelectedApplicants(result.selectedApplicants);\n\n  const fetchData = () => {\n    fetch(\"http://localhost:8080/JobVista/Graph\", {\n      method: 'POST',\n      headers: {\n        'Content-type': 'Application/JSON'\n      },\n      body: JSON.stringify({\n        'userDetails': JSON.parse(localStorage.getItem('userDetails'))\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(result => {\n      console.log(\"chart: \", result);\n      setTotalOpenings(result.totalOpenings);\n      setTotalApplicants(result.totalApplicants);\n      setSelectedApplicants(result.selectedApplicants);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Total Openings :  \", totalOpeningsJson.totalOpenings]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Total Applicants :  \", totalOpeningsJson.totalApplicants]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Selected Applicants :  \", totalOpeningsJson.selectedApplicants]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(PanelistTextPrint, \"7MV2vxM3j2WJf/KoADMxQTgtkMU=\");\n_c = PanelistTextPrint;\nexport default PanelistTextPrint;\nvar _c;\n$RefreshReg$(_c, \"PanelistTextPrint\");","map":{"version":3,"names":["React","useState","useEffect","Text","jsxDEV","_jsxDEV","PanelistTextPrint","_s","totalOpeningsJson","setTotalOpeningsJson","totalOpenings","result","totalApplicants","selectedApplicants","fetchData","fetch","method","headers","body","JSON","stringify","parse","localStorage","getItem","then","response","ok","Error","status","json","console","log","setTotalOpenings","setTotalApplicants","setSelectedApplicants","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abi-zstk360/Downloads/RecruitmentProject/Project/myproject/src/Components/PanelistPage/ApplicantText.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text } from \"../Text/Text\";\n\n\nconst PanelistTextPrint = () => {\n    const [totalOpeningsJson, setTotalOpeningsJson] = useState({\n        \"totalOpenings\": '',\n        \"totalApplicants\": '',\n        \"selectedApplicants\": ''\n    });\n    // const [totalApplicants, setTotalApplicants] = useState(null);\n    // const [selectedApplicants, setSelectedApplicants] = useState(null);\n\n    // const result = {\"totalOpenings\":6,\"totalApplicants\":22,\"selectedApplicants\":8};\n\n    totalOpeningsJson.totalOpenings = result.totalOpenings;\n    totalOpeningsJson.totalApplicants = result.totalApplicants;\n    totalOpeningsJson.selectedApplicants = result.selectedApplicants;\n        // setTotalApplicants(result.totalApplicants);\n        // setSelectedApplicants(result.selectedApplicants);\n\n    const fetchData = () => {\n        fetch(\"http://localhost:8080/JobVista/Graph\", {\n            method: 'POST',\n            headers: {\n                'Content-type': 'Application/JSON'\n            },\n            body: JSON.stringify({ 'userDetails': JSON.parse(localStorage.getItem('userDetails')) })\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(result => {\n                console.log(\"chart: \", result);\n                setTotalOpenings(result.totalOpenings);\n                setTotalApplicants(result.totalApplicants);\n                setSelectedApplicants(result.selectedApplicants);\n                \n\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n            });\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <Text>Total Openings :  {totalOpeningsJson.totalOpenings}</Text>\n            <Text>Total Applicants :  {totalOpeningsJson.totalApplicants}</Text>\n            <Text>Selected Applicants :  {totalOpeningsJson.selectedApplicants}</Text>\n        </div>\n\n    );\n};\n\nexport default PanelistTextPrint;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC;IACvD,eAAe,EAAE,EAAE;IACnB,iBAAiB,EAAE,EAAE;IACrB,oBAAoB,EAAE;EAC1B,CAAC,CAAC;EACF;EACA;;EAEA;;EAEAO,iBAAiB,CAACE,aAAa,GAAGC,MAAM,CAACD,aAAa;EACtDF,iBAAiB,CAACI,eAAe,GAAGD,MAAM,CAACC,eAAe;EAC1DJ,iBAAiB,CAACK,kBAAkB,GAAGF,MAAM,CAACE,kBAAkB;EAC5D;EACA;;EAEJ,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBC,KAAK,CAAC,sCAAsC,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,aAAa,EAAED,IAAI,CAACE,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAAE,CAAC;IAC3F,CAAC,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;MAC7D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAACb,MAAM,IAAI;MACZmB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEpB,MAAM,CAAC;MAC9BqB,gBAAgB,CAACrB,MAAM,CAACD,aAAa,CAAC;MACtCuB,kBAAkB,CAACtB,MAAM,CAACC,eAAe,CAAC;MAC1CsB,qBAAqB,CAACvB,MAAM,CAACE,kBAAkB,CAAC;IAGpD,CAAC,CAAC,CACDsB,KAAK,CAACC,KAAK,IAAI;MACZN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACZY,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA;IAAAgC,QAAA,gBACIhC,OAAA,CAACF,IAAI;MAAAkC,QAAA,GAAC,oBAAkB,EAAC7B,iBAAiB,CAACE,aAAa;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChEpC,OAAA,CAACF,IAAI;MAAAkC,QAAA,GAAC,sBAAoB,EAAC7B,iBAAiB,CAACI,eAAe;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpEpC,OAAA,CAACF,IAAI;MAAAkC,QAAA,GAAC,yBAAuB,EAAC7B,iBAAiB,CAACK,kBAAkB;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAGd,CAAC;AAAClC,EAAA,CAxDID,iBAAiB;AAAAoC,EAAA,GAAjBpC,iBAAiB;AA0DvB,eAAeA,iBAAiB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}